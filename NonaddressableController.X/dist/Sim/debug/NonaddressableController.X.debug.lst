

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Jan 31 18:35:02 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.41
    18                           ; Generated 25/01/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F1827 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0094                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  010D                     	;# 
    99  0111                     	;# 
   100  0112                     	;# 
   101  0113                     	;# 
   102  0114                     	;# 
   103  0115                     	;# 
   104  0116                     	;# 
   105  0117                     	;# 
   106  0118                     	;# 
   107  0119                     	;# 
   108  011A                     	;# 
   109  011B                     	;# 
   110  011D                     	;# 
   111  011E                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0191                     	;# 
   115  0191                     	;# 
   116  0192                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  0199                     	;# 
   124  019A                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019C                     	;# 
   130  019C                     	;# 
   131  019D                     	;# 
   132  019E                     	;# 
   133  019F                     	;# 
   134  020C                     	;# 
   135  020D                     	;# 
   136  0211                     	;# 
   137  0211                     	;# 
   138  0212                     	;# 
   139  0212                     	;# 
   140  0213                     	;# 
   141  0213                     	;# 
   142  0214                     	;# 
   143  0214                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0216                     	;# 
   148  0216                     	;# 
   149  0217                     	;# 
   150  0217                     	;# 
   151  0219                     	;# 
   152  021A                     	;# 
   153  021B                     	;# 
   154  021C                     	;# 
   155  021D                     	;# 
   156  021E                     	;# 
   157  021F                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0295                     	;# 
   164  0295                     	;# 
   165  0296                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029B                     	;# 
   171  029C                     	;# 
   172  029C                     	;# 
   173  029D                     	;# 
   174  029E                     	;# 
   175  029E                     	;# 
   176  0311                     	;# 
   177  0311                     	;# 
   178  0312                     	;# 
   179  0313                     	;# 
   180  0318                     	;# 
   181  0318                     	;# 
   182  0319                     	;# 
   183  031A                     	;# 
   184  0394                     	;# 
   185  0395                     	;# 
   186  0396                     	;# 
   187  039A                     	;# 
   188  039C                     	;# 
   189  039D                     	;# 
   190  039E                     	;# 
   191  039F                     	;# 
   192  0415                     	;# 
   193  0416                     	;# 
   194  0417                     	;# 
   195  041C                     	;# 
   196  041D                     	;# 
   197  041E                     	;# 
   198  0FE4                     	;# 
   199  0FE5                     	;# 
   200  0FE6                     	;# 
   201  0FE7                     	;# 
   202  0FE8                     	;# 
   203  0FE9                     	;# 
   204  0FEA                     	;# 
   205  0FEB                     	;# 
   206  0FED                     	;# 
   207  0FEE                     	;# 
   208  0FEF                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  008C                     	;# 
   239  008D                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0094                     	;# 
   244  0095                     	;# 
   245  0096                     	;# 
   246  0097                     	;# 
   247  0098                     	;# 
   248  0099                     	;# 
   249  009A                     	;# 
   250  009B                     	;# 
   251  009B                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  010C                     	;# 
   256  010D                     	;# 
   257  0111                     	;# 
   258  0112                     	;# 
   259  0113                     	;# 
   260  0114                     	;# 
   261  0115                     	;# 
   262  0116                     	;# 
   263  0117                     	;# 
   264  0118                     	;# 
   265  0119                     	;# 
   266  011A                     	;# 
   267  011B                     	;# 
   268  011D                     	;# 
   269  011E                     	;# 
   270  018C                     	;# 
   271  018D                     	;# 
   272  0191                     	;# 
   273  0191                     	;# 
   274  0192                     	;# 
   275  0193                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0194                     	;# 
   279  0195                     	;# 
   280  0196                     	;# 
   281  0199                     	;# 
   282  019A                     	;# 
   283  019B                     	;# 
   284  019B                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019C                     	;# 
   288  019C                     	;# 
   289  019D                     	;# 
   290  019E                     	;# 
   291  019F                     	;# 
   292  020C                     	;# 
   293  020D                     	;# 
   294  0211                     	;# 
   295  0211                     	;# 
   296  0212                     	;# 
   297  0212                     	;# 
   298  0213                     	;# 
   299  0213                     	;# 
   300  0214                     	;# 
   301  0214                     	;# 
   302  0215                     	;# 
   303  0215                     	;# 
   304  0215                     	;# 
   305  0216                     	;# 
   306  0216                     	;# 
   307  0217                     	;# 
   308  0217                     	;# 
   309  0219                     	;# 
   310  021A                     	;# 
   311  021B                     	;# 
   312  021C                     	;# 
   313  021D                     	;# 
   314  021E                     	;# 
   315  021F                     	;# 
   316  0291                     	;# 
   317  0291                     	;# 
   318  0292                     	;# 
   319  0293                     	;# 
   320  0294                     	;# 
   321  0295                     	;# 
   322  0295                     	;# 
   323  0296                     	;# 
   324  0298                     	;# 
   325  0298                     	;# 
   326  0299                     	;# 
   327  029A                     	;# 
   328  029B                     	;# 
   329  029C                     	;# 
   330  029C                     	;# 
   331  029D                     	;# 
   332  029E                     	;# 
   333  029E                     	;# 
   334  0311                     	;# 
   335  0311                     	;# 
   336  0312                     	;# 
   337  0313                     	;# 
   338  0318                     	;# 
   339  0318                     	;# 
   340  0319                     	;# 
   341  031A                     	;# 
   342  0394                     	;# 
   343  0395                     	;# 
   344  0396                     	;# 
   345  039A                     	;# 
   346  039C                     	;# 
   347  039D                     	;# 
   348  039E                     	;# 
   349  039F                     	;# 
   350  0415                     	;# 
   351  0416                     	;# 
   352  0417                     	;# 
   353  041C                     	;# 
   354  041D                     	;# 
   355  041E                     	;# 
   356  0FE4                     	;# 
   357  0FE5                     	;# 
   358  0FE6                     	;# 
   359  0FE7                     	;# 
   360  0FE8                     	;# 
   361  0FE9                     	;# 
   362  0FEA                     	;# 
   363  0FEB                     	;# 
   364  0FED                     	;# 
   365  0FEE                     	;# 
   366  0FEF                     	;# 
   367  0011                     _PIR1bits	set	17
   368  000B                     _INTCONbits	set	11
   369  0091                     _PIE1bits	set	145
   370  0095                     _OPTION_REGbits	set	149
   371  008D                     _TRISBbits	set	141
   372  008C                     _TRISAbits	set	140
   373  0099                     _OSCCONbits	set	153
   374  010D                     _LATBbits	set	269
   375  010C                     _LATAbits	set	268
   376  0215                     _SSP1CON1bits	set	533
   377  0211                     _SSP1BUF	set	529
   378                           
   379                           ; #config settings
   380  0000                     
   381                           	psect	cinit
   382  0058                     start_initialization:	
   383  0058                     __initialization:	
   384                           
   385                           ; Clear objects allocated to COMMON
   386  0058  01F0               	clrf	__pbssCOMMON& (0+127)
   387  0059  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   388  005A  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   389  005B  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   390  005C  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   391  005D  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   392  005E  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   393  005F  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   394  0060  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   395  0061  01F9               	clrf	(__pbssCOMMON+9)& (0+127)
   396                           
   397                           ; Clear objects allocated to BANK0
   398  0062  01A2               	clrf	__pbssBANK0& (0+127)
   399  0063                     end_of_initialization:	
   400                           ;End of C runtime variable initialization code
   401                           
   402  0063                     __end_of__initialization:	
   403  0063  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   404  0064  0020               	movlb	0
   405  0065  3180  28F2         	ljmp	_main	;jump to C main() function
   406                           
   407                           	psect	bssCOMMON
   408  0070                     __pbssCOMMON:	
   409  0070                     _currentPWMOffset:	
   410  0070                     	ds	1
   411  0071                     _byteToProcess:	
   412  0071                     	ds	1
   413  0072                     _processByteFlag:	
   414  0072                     	ds	1
   415  0073                     _SPIcomm_mode:	
   416  0073                     	ds	1
   417  0074                     _J3_Blue:	
   418  0074                     	ds	1
   419  0075                     _J3_Green:	
   420  0075                     	ds	1
   421  0076                     _J3_Red:	
   422  0076                     	ds	1
   423  0077                     _J2_Blue:	
   424  0077                     	ds	1
   425  0078                     _J2_Green:	
   426  0078                     	ds	1
   427  0079                     _J2_Red:	
   428  0079                     	ds	1
   429                           
   430                           	psect	bssBANK0
   431  0022                     __pbssBANK0:	
   432  0022                     _dataDestination:	
   433  0022                     	ds	1
   434                           
   435                           	psect	cstackCOMMON
   436  007A                     __pcstackCOMMON:	
   437  007A                     ?_init:	
   438  007A                     ?_run:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  007A                     ?_SPIinit:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  007A                     ?_processSPIByte:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  007A                     ?_main:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  007A                     ?_ISR:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  007A                     ??_ISR:	
   454                           ; 1 bytes @ 0x0
   455                           
   456                           
   457                           ; 1 bytes @ 0x0
   458  007A                     	ds	2
   459  007C                     ??_init:	
   460  007C                     ??_run:	
   461                           ; 1 bytes @ 0x2
   462                           
   463  007C                     ??_SPIinit:	
   464                           ; 1 bytes @ 0x2
   465                           
   466  007C                     ??_main:	
   467                           ; 1 bytes @ 0x2
   468                           
   469                           
   470                           	psect	cstackBANK0
   471  0020                     __pcstackBANK0:	
   472                           ; 1 bytes @ 0x2
   473                           
   474  0020                     ??_processSPIByte:	
   475                           
   476                           ; 1 bytes @ 0x0
   477  0020                     	ds	1
   478  0021                     processSPIByte@theByte:	
   479                           
   480                           ; 1 bytes @ 0x1
   481  0021                     	ds	1
   482                           
   483                           	psect	maintext
   484  00F2                     __pmaintext:	
   485 ;;
   486 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   487 ;;
   488 ;; *************** function _main *****************
   489 ;; Defined at:
   490 ;;		line 35 in file "main.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   499 ;; Tracked objects:
   500 ;;		On entry : B1F/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   504 ;;      Params:         0       0       0       0       0       0
   505 ;;      Locals:         0       0       0       0       0       0
   506 ;;      Temps:          0       0       0       0       0       0
   507 ;;      Totals:         0       0       0       0       0       0
   508 ;;Total ram usage:        0 bytes
   509 ;; Hardware stack levels required when called:    3
   510 ;; This function calls:
   511 ;;		_init
   512 ;;		_run
   513 ;; This function is called by:
   514 ;;		Startup code after reset
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           
   519                           ;psect for function _main
   520  00F2                     _main:	
   521                           
   522                           ;main.c: 36: init();
   523                           
   524                           ;incstack = 0
   525                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   526  00F2  3180  20B7  3180   	fcall	_init
   527  00F5                     l770:	
   528                           ;main.c: 37: while((1)){
   529                           
   530                           
   531                           ;main.c: 38: run();
   532  00F5  3180  20EA  3180   	fcall	_run
   533  00F8  28F5               	goto	l770
   534  00F9                     __end_of_main:	
   535                           
   536                           	psect	text1
   537  00EA                     __ptext1:	
   538 ;; *************** function _run *****************
   539 ;; Defined at:
   540 ;;		line 74 in file "main.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   554 ;;      Params:         0       0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0       0
   556 ;;      Temps:          0       0       0       0       0       0
   557 ;;      Totals:         0       0       0       0       0       0
   558 ;;Total ram usage:        0 bytes
   559 ;; Hardware stack levels used:    1
   560 ;; Hardware stack levels required when called:    2
   561 ;; This function calls:
   562 ;;		_processSPIByte
   563 ;; This function is called by:
   564 ;;		_main
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           
   569                           ;psect for function _run
   570  00EA                     _run:	
   571                           
   572                           ;main.c: 75: if(processByteFlag){
   573                           
   574                           ;incstack = 0
   575                           ; Regs used in _run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   576  00EA  0872               	movf	_processByteFlag,w
   577  00EB  1903               	btfsc	3,2
   578  00EC  0008               	return
   579                           
   580                           ;main.c: 76: processSPIByte(byteToProcess);
   581  00ED  0871               	movf	_byteToProcess,w
   582  00EE  3180  2067         	fcall	_processSPIByte
   583                           
   584                           ;main.c: 77: processByteFlag = (0);
   585  00F0  01F2               	clrf	_processByteFlag
   586  00F1  0008               	return
   587  00F2                     __end_of_run:	
   588                           
   589                           	psect	text2
   590  0067                     __ptext2:	
   591 ;; *************** function _processSPIByte *****************
   592 ;; Defined at:
   593 ;;		line 14 in file "spicomm.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;  theByte         1    wreg     unsigned char 
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  theByte         1    1[BANK0 ] unsigned char 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   607 ;;      Params:         0       0       0       0       0       0
   608 ;;      Locals:         0       1       0       0       0       0
   609 ;;      Temps:          0       1       0       0       0       0
   610 ;;      Totals:         0       2       0       0       0       0
   611 ;;Total ram usage:        2 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_run
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           
   622                           ;psect for function _processSPIByte
   623  0067                     _processSPIByte:	
   624                           
   625                           ;incstack = 0
   626                           ; Regs used in _processSPIByte: [wreg-fsr1h+status,2+status,0]
   627                           ;processSPIByte@theByte stored from wreg
   628  0067  0020               	movlb	0	; select bank0
   629  0068  00A1               	movwf	processSPIByte@theByte
   630                           
   631                           ;spicomm.c: 15: if(SPIcomm_mode == 0){
   632  0069  0873               	movf	_SPIcomm_mode,w
   633  006A  1903               	btfsc	3,2
   634  006B  2897               	goto	l754
   635  006C  28AC               	goto	l756
   636  006D                     l728:	
   637                           ;spicomm.c: 18: case 'r':
   638                           
   639                           ;spicomm.c: 17: switch(theByte){
   640                           
   641                           
   642                           ;spicomm.c: 19: dataDestination = &J2_Red;
   643  006D  3079               	movlw	(low (_J2_Red| 0))& (0+255)
   644  006E  00A0               	movwf	??_processSPIByte
   645  006F  0820               	movf	??_processSPIByte,w
   646  0070  00A2               	movwf	_dataDestination
   647                           
   648                           ;spicomm.c: 20: SPIcomm_mode = 1;
   649  0071  01F3               	clrf	_SPIcomm_mode
   650  0072  0AF3               	incf	_SPIcomm_mode,f
   651                           
   652                           ;spicomm.c: 21: break;
   653  0073  0008               	return
   654  0074                     l732:	
   655                           ;spicomm.c: 22: case 'g':
   656                           
   657                           
   658                           ;spicomm.c: 23: dataDestination = &J2_Green;
   659  0074  3078               	movlw	(low (_J2_Green| 0))& (0+255)
   660  0075  00A0               	movwf	??_processSPIByte
   661  0076  0820               	movf	??_processSPIByte,w
   662  0077  00A2               	movwf	_dataDestination
   663                           
   664                           ;spicomm.c: 24: SPIcomm_mode = 1;
   665  0078  01F3               	clrf	_SPIcomm_mode
   666  0079  0AF3               	incf	_SPIcomm_mode,f
   667                           
   668                           ;spicomm.c: 25: break;
   669  007A  0008               	return
   670  007B                     l736:	
   671                           ;spicomm.c: 26: case 'b':
   672                           
   673                           
   674                           ;spicomm.c: 27: dataDestination = &J2_Blue;
   675  007B  3077               	movlw	(low (_J2_Blue| 0))& (0+255)
   676  007C  00A0               	movwf	??_processSPIByte
   677  007D  0820               	movf	??_processSPIByte,w
   678  007E  00A2               	movwf	_dataDestination
   679                           
   680                           ;spicomm.c: 28: SPIcomm_mode = 1;
   681  007F  01F3               	clrf	_SPIcomm_mode
   682  0080  0AF3               	incf	_SPIcomm_mode,f
   683                           
   684                           ;spicomm.c: 29: break;
   685  0081  0008               	return
   686  0082                     l740:	
   687                           ;spicomm.c: 30: case 'R':
   688                           
   689                           
   690                           ;spicomm.c: 31: dataDestination = &J3_Red;
   691  0082  3076               	movlw	(low (_J3_Red| 0))& (0+255)
   692  0083  00A0               	movwf	??_processSPIByte
   693  0084  0820               	movf	??_processSPIByte,w
   694  0085  00A2               	movwf	_dataDestination
   695                           
   696                           ;spicomm.c: 32: SPIcomm_mode = 1;
   697  0086  01F3               	clrf	_SPIcomm_mode
   698  0087  0AF3               	incf	_SPIcomm_mode,f
   699                           
   700                           ;spicomm.c: 33: break;
   701  0088  0008               	return
   702  0089                     l744:	
   703                           ;spicomm.c: 34: case 'G':
   704                           
   705                           
   706                           ;spicomm.c: 35: dataDestination = &J3_Green;
   707  0089  3075               	movlw	(low (_J3_Green| 0))& (0+255)
   708  008A  00A0               	movwf	??_processSPIByte
   709  008B  0820               	movf	??_processSPIByte,w
   710  008C  00A2               	movwf	_dataDestination
   711                           
   712                           ;spicomm.c: 36: SPIcomm_mode = 1;
   713  008D  01F3               	clrf	_SPIcomm_mode
   714  008E  0AF3               	incf	_SPIcomm_mode,f
   715                           
   716                           ;spicomm.c: 37: break;
   717  008F  0008               	return
   718  0090                     l748:	
   719                           ;spicomm.c: 38: case 'B':
   720                           
   721                           
   722                           ;spicomm.c: 39: dataDestination = &J3_Blue;
   723  0090  3074               	movlw	(low (_J3_Blue| 0))& (0+255)
   724  0091  00A0               	movwf	??_processSPIByte
   725  0092  0820               	movf	??_processSPIByte,w
   726  0093  00A2               	movwf	_dataDestination
   727                           
   728                           ;spicomm.c: 40: SPIcomm_mode = 1;
   729  0094  01F3               	clrf	_SPIcomm_mode
   730  0095  0AF3               	incf	_SPIcomm_mode,f
   731                           
   732                           ;spicomm.c: 42: }
   733                           
   734                           ;spicomm.c: 41: break;
   735  0096  0008               	return
   736  0097                     l754:	
   737  0097  0821               	movf	processSPIByte@theByte,w
   738                           
   739                           ; Switch size 1, requested type "space"
   740                           ; Number of cases is 6, Range of values is 66 to 114
   741                           ; switch strategies available:
   742                           ; Name         Instructions Cycles
   743                           ; simple_byte           19    10 (average)
   744                           ; direct_byte          107     9 (fixed)
   745                           ; jumptable            263     9 (fixed)
   746                           ;	Chosen strategy is simple_byte
   747  0098  3A42               	xorlw	66	; case 66
   748  0099  1903               	skipnz
   749  009A  2890               	goto	l748
   750  009B  3A05               	xorlw	5	; case 71
   751  009C  1903               	skipnz
   752  009D  2889               	goto	l744
   753  009E  3A15               	xorlw	21	; case 82
   754  009F  1903               	skipnz
   755  00A0  2882               	goto	l740
   756  00A1  3A30               	xorlw	48	; case 98
   757  00A2  1903               	skipnz
   758  00A3  287B               	goto	l736
   759  00A4  3A05               	xorlw	5	; case 103
   760  00A5  1903               	skipnz
   761  00A6  2874               	goto	l732
   762  00A7  3A15               	xorlw	21	; case 114
   763  00A8  1903               	skipnz
   764  00A9  286D               	goto	l728
   765  00AA  28B6               	goto	l97
   766                           
   767                           ;spicomm.c: 43: }
   768  00AB  0008               	return
   769  00AC                     l756:	
   770                           
   771                           ;spicomm.c: 44: else{
   772                           ;spicomm.c: 46: *dataDestination = theByte;
   773  00AC  0821               	movf	processSPIByte@theByte,w
   774  00AD  00A0               	movwf	??_processSPIByte
   775  00AE  0822               	movf	_dataDestination,w
   776  00AF  0086               	movwf	6
   777  00B0  0187               	clrf	7
   778  00B1  0820               	movf	??_processSPIByte,w
   779  00B2  0081               	movwf	1
   780                           
   781                           ;spicomm.c: 47: dataDestination = 0;
   782  00B3  01A2               	clrf	_dataDestination
   783                           
   784                           ;spicomm.c: 48: SPIcomm_mode = 0;
   785  00B4  01F3               	clrf	_SPIcomm_mode
   786  00B5  0008               	return
   787  00B6                     l97:	
   788  00B6  0008               	return
   789  00B7                     __end_of_processSPIByte:	
   790                           
   791                           	psect	text3
   792  00B7                     __ptext3:	
   793 ;; *************** function _init *****************
   794 ;; Defined at:
   795 ;;		line 42 in file "main.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, status,2, status,0, pclath, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   809 ;;      Params:         0       0       0       0       0       0
   810 ;;      Locals:         0       0       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0       0
   812 ;;      Totals:         0       0       0       0       0       0
   813 ;;Total ram usage:        0 bytes
   814 ;; Hardware stack levels used:    1
   815 ;; Hardware stack levels required when called:    2
   816 ;; This function calls:
   817 ;;		_SPIinit
   818 ;; This function is called by:
   819 ;;		_main
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           
   824                           ;psect for function _init
   825  00B7                     _init:	
   826                           
   827                           ;main.c: 43: INTCONbits.GIE == (0);
   828                           
   829                           ;incstack = 0
   830                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   831  00B7  080B               	movf	11,w	;volatile
   832                           
   833                           ;main.c: 45: OSCCONbits.IRCF = 0b1110;
   834  00B8  0021               	movlb	1	; select bank1
   835  00B9  0819               	movf	25,w	;volatile
   836  00BA  3987               	andlw	-121
   837  00BB  3870               	iorlw	112
   838  00BC  0099               	movwf	25	;volatile
   839                           
   840                           ;main.c: 48: INTCONbits.PEIE = (1);
   841  00BD  170B               	bsf	11,6	;volatile
   842                           
   843                           ;main.c: 50: TRISAbits.TRISA1 = (0);
   844  00BE  108C               	bcf	12,1	;volatile
   845                           
   846                           ;main.c: 51: LATAbits.LATA1 = (0);
   847  00BF  0022               	movlb	2	; select bank2
   848  00C0  108C               	bcf	12,1	;volatile
   849                           
   850                           ;main.c: 52: TRISAbits.TRISA0 = (0);
   851  00C1  0021               	movlb	1	; select bank1
   852  00C2  100C               	bcf	12,0	;volatile
   853                           
   854                           ;main.c: 53: LATAbits.LATA0 = (0);
   855  00C3  0022               	movlb	2	; select bank2
   856  00C4  100C               	bcf	12,0	;volatile
   857                           
   858                           ;main.c: 54: TRISAbits.TRISA2 = (0);
   859  00C5  0021               	movlb	1	; select bank1
   860  00C6  110C               	bcf	12,2	;volatile
   861                           
   862                           ;main.c: 55: LATAbits.LATA2 = (0);
   863  00C7  0022               	movlb	2	; select bank2
   864  00C8  110C               	bcf	12,2	;volatile
   865                           
   866                           ;main.c: 57: TRISAbits.TRISA4 = (0);
   867  00C9  0021               	movlb	1	; select bank1
   868  00CA  120C               	bcf	12,4	;volatile
   869                           
   870                           ;main.c: 58: LATAbits.LATA4 = (0);
   871  00CB  0022               	movlb	2	; select bank2
   872  00CC  120C               	bcf	12,4	;volatile
   873                           
   874                           ;main.c: 59: TRISAbits.TRISA3 = (0);
   875  00CD  0021               	movlb	1	; select bank1
   876  00CE  118C               	bcf	12,3	;volatile
   877                           
   878                           ;main.c: 60: LATAbits.LATA3 = (0);
   879  00CF  0022               	movlb	2	; select bank2
   880  00D0  118C               	bcf	12,3	;volatile
   881                           
   882                           ;main.c: 61: TRISBbits.TRISB0 = (0);
   883  00D1  0021               	movlb	1	; select bank1
   884  00D2  100D               	bcf	13,0	;volatile
   885                           
   886                           ;main.c: 62: LATBbits.LATB0 = (0);
   887  00D3  0022               	movlb	2	; select bank2
   888  00D4  100D               	bcf	13,0	;volatile
   889                           
   890                           ;main.c: 64: SPIinit();
   891  00D5  3180  20E1         	fcall	_SPIinit
   892                           
   893                           ;main.c: 66: OPTION_REGbits.TMR0CS = 0;
   894  00D7  0021               	movlb	1	; select bank1
   895  00D8  1295               	bcf	21,5	;volatile
   896                           
   897                           ;main.c: 67: OPTION_REGbits.PSA = 0;
   898  00D9  1195               	bcf	21,3	;volatile
   899                           
   900                           ;main.c: 68: OPTION_REGbits.PS = 0b110;
   901  00DA  0815               	movf	21,w	;volatile
   902  00DB  39F8               	andlw	-8
   903  00DC  3806               	iorlw	6
   904  00DD  0095               	movwf	21	;volatile
   905                           
   906                           ;main.c: 69: INTCONbits.TMR0IE = (1);
   907  00DE  168B               	bsf	11,5	;volatile
   908                           
   909                           ;main.c: 71: INTCONbits.GIE == (1);
   910  00DF  080B               	movf	11,w	;volatile
   911  00E0  0008               	return
   912  00E1                     __end_of_init:	
   913                           
   914                           	psect	text4
   915  00E1                     __ptext4:	
   916 ;; *************** function _SPIinit *****************
   917 ;; Defined at:
   918 ;;		line 52 in file "spicomm.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   932 ;;      Params:         0       0       0       0       0       0
   933 ;;      Locals:         0       0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0
   935 ;;      Totals:         0       0       0       0       0       0
   936 ;;Total ram usage:        0 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; Hardware stack levels required when called:    1
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_init
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function _SPIinit
   948  00E1                     _SPIinit:	
   949                           
   950                           ;spicomm.c: 53: SSP1CON1bits.SSPEN = (1);
   951                           
   952                           ;incstack = 0
   953                           ; Regs used in _SPIinit: [wreg+status,2+status,0]
   954  00E1  0024               	movlb	4	; select bank4
   955  00E2  1695               	bsf	21,5	;volatile
   956                           
   957                           ;spicomm.c: 54: SSP1CON1bits.SSPM = 0b0100;
   958  00E3  0815               	movf	21,w	;volatile
   959  00E4  39F0               	andlw	-16
   960  00E5  3804               	iorlw	4
   961  00E6  0095               	movwf	21	;volatile
   962                           
   963                           ;spicomm.c: 55: PIE1bits.SSP1IE = (1);
   964  00E7  0021               	movlb	1	; select bank1
   965  00E8  1591               	bsf	17,3	;volatile
   966  00E9  0008               	return
   967  00EA                     __end_of_SPIinit:	
   968                           
   969                           	psect	intentry
   970  0004                     __pintentry:	
   971 ;; *************** function _ISR *****************
   972 ;; Defined at:
   973 ;;		line 81 in file "main.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   987 ;;      Params:         0       0       0       0       0       0
   988 ;;      Locals:         0       0       0       0       0       0
   989 ;;      Temps:          2       0       0       0       0       0
   990 ;;      Totals:         2       0       0       0       0       0
   991 ;;Total ram usage:        2 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; This function calls:
   994 ;;		Nothing
   995 ;; This function is called by:
   996 ;;		Interrupt level 1
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000  0004                     _ISR:	
  1001                           
  1002                           ;incstack = 0
  1003  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1004                           
  1005                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1006  0005  3180               	pagesel	$
  1007  0006  0020               	movlb	0	; select bank0
  1008  0007  087F               	movf	127,w
  1009  0008  00FB               	movwf	??_ISR+1
  1010                           
  1011                           ;main.c: 82: if(PIR1bits.SSP1IF){
  1012  0009  1D91               	btfss	17,3	;volatile
  1013  000A  2814               	goto	i1l668
  1014                           
  1015                           ;main.c: 83: processByteFlag = (1);
  1016  000B  01F2               	clrf	_processByteFlag
  1017  000C  0AF2               	incf	_processByteFlag,f
  1018                           
  1019                           ;main.c: 84: byteToProcess = SSP1BUF;
  1020  000D  0024               	movlb	4	; select bank4
  1021  000E  0811               	movf	17,w	;volatile
  1022  000F  00FA               	movwf	??_ISR
  1023  0010  087A               	movf	??_ISR,w
  1024  0011  00F1               	movwf	_byteToProcess
  1025                           
  1026                           ;main.c: 85: PIR1bits.SSP1IF = (0);
  1027  0012  0020               	movlb	0	; select bank0
  1028  0013  1191               	bcf	17,3	;volatile
  1029  0014                     i1l668:	
  1030                           
  1031                           ;main.c: 86: }
  1032                           ;main.c: 87: if(INTCONbits.TMR0IF){
  1033  0014  1D0B               	btfss	11,2	;volatile
  1034  0015  2851               	goto	i1l64
  1035                           
  1036                           ;main.c: 88: LATAbits.LATA1 = (J2_Red > currentPWMOffset);
  1037  0016  0879               	movf	_J2_Red,w
  1038  0017  0270               	subwf	_currentPWMOffset,w
  1039  0018  1803               	btfsc	3,0
  1040  0019  281D               	goto	u5_20
  1041  001A  0022               	movlb	2	; select bank2
  1042  001B  148C               	bsf	12,1	;volatile
  1043  001C  281F               	goto	u6_24
  1044  001D                     u5_20:	
  1045  001D  0022               	movlb	2	; select bank2
  1046  001E  108C               	bcf	12,1	;volatile
  1047  001F                     u6_24:	
  1048                           
  1049                           ;main.c: 89: LATAbits.LATA0 = (J2_Green > currentPWMOffset);
  1050  001F  0878               	movf	_J2_Green,w
  1051  0020  0270               	subwf	_currentPWMOffset,w
  1052  0021  1803               	btfsc	3,0
  1053  0022  2826               	goto	u7_20
  1054  0023  0022               	movlb	2	; select bank2
  1055  0024  140C               	bsf	12,0	;volatile
  1056  0025  2828               	goto	u8_24
  1057  0026                     u7_20:	
  1058  0026  0022               	movlb	2	; select bank2
  1059  0027  100C               	bcf	12,0	;volatile
  1060  0028                     u8_24:	
  1061                           
  1062                           ;main.c: 90: LATAbits.LATA2 = (J2_Blue > currentPWMOffset);
  1063  0028  0877               	movf	_J2_Blue,w
  1064  0029  0270               	subwf	_currentPWMOffset,w
  1065  002A  1803               	btfsc	3,0
  1066  002B  282F               	goto	u9_20
  1067  002C  0022               	movlb	2	; select bank2
  1068  002D  150C               	bsf	12,2	;volatile
  1069  002E  2831               	goto	u10_24
  1070  002F                     u9_20:	
  1071  002F  0022               	movlb	2	; select bank2
  1072  0030  110C               	bcf	12,2	;volatile
  1073  0031                     u10_24:	
  1074                           
  1075                           ;main.c: 92: LATAbits.LATA4 = (J3_Red > currentPWMOffset);
  1076  0031  0876               	movf	_J3_Red,w
  1077  0032  0270               	subwf	_currentPWMOffset,w
  1078  0033  1803               	btfsc	3,0
  1079  0034  2838               	goto	u11_20
  1080  0035  0022               	movlb	2	; select bank2
  1081  0036  160C               	bsf	12,4	;volatile
  1082  0037  283A               	goto	u12_24
  1083  0038                     u11_20:	
  1084  0038  0022               	movlb	2	; select bank2
  1085  0039  120C               	bcf	12,4	;volatile
  1086  003A                     u12_24:	
  1087                           
  1088                           ;main.c: 93: LATAbits.LATA3 = (J3_Green > currentPWMOffset);
  1089  003A  0875               	movf	_J3_Green,w
  1090  003B  0270               	subwf	_currentPWMOffset,w
  1091  003C  1803               	btfsc	3,0
  1092  003D  2841               	goto	u13_20
  1093  003E  0022               	movlb	2	; select bank2
  1094  003F  158C               	bsf	12,3	;volatile
  1095  0040  2843               	goto	u14_24
  1096  0041                     u13_20:	
  1097  0041  0022               	movlb	2	; select bank2
  1098  0042  118C               	bcf	12,3	;volatile
  1099  0043                     u14_24:	
  1100                           
  1101                           ;main.c: 94: LATBbits.LATB0 = (J3_Blue > currentPWMOffset);
  1102  0043  0874               	movf	_J3_Blue,w
  1103  0044  0270               	subwf	_currentPWMOffset,w
  1104  0045  1803               	btfsc	3,0
  1105  0046  284A               	goto	u15_20
  1106  0047  0022               	movlb	2	; select bank2
  1107  0048  140D               	bsf	13,0	;volatile
  1108  0049  284C               	goto	i1l672
  1109  004A                     u15_20:	
  1110  004A  0022               	movlb	2	; select bank2
  1111  004B  100D               	bcf	13,0	;volatile
  1112  004C                     i1l672:	
  1113                           
  1114                           ;main.c: 96: currentPWMOffset++;
  1115  004C  3001               	movlw	1
  1116  004D  00FA               	movwf	??_ISR
  1117  004E  087A               	movf	??_ISR,w
  1118  004F  07F0               	addwf	_currentPWMOffset,f
  1119                           
  1120                           ;main.c: 98: INTCONbits.TMR0IF = (0);
  1121  0050  110B               	bcf	11,2	;volatile
  1122  0051                     i1l64:	
  1123  0051  087B               	movf	??_ISR+1,w
  1124  0052  0020               	movlb	0	; select bank0
  1125  0053  00FF               	movwf	127
  1126  0054  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1127  0055  0009               	retfie
  1128  0056                     __end_of_ISR:	
  1129  007E                     btemp	set	126	;btemp
  1130  007E                     int$flags	set	126
  1131  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      12
    BANK0            80      2       3
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    dataDestination	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), J3_Blue(COMMON[1]), J3_Green(COMMON[1]), J3_Red(COMMON[1]), 
		 -> J2_Blue(COMMON[1]), J2_Green(COMMON[1]), J2_Red(COMMON[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _run->_processSPIByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      62
                               _init
                                _run
 ---------------------------------------------------------------------------------
 (1) _run                                                  0     0      0      62
                     _processSPIByte
 ---------------------------------------------------------------------------------
 (2) _processSPIByte                                       2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                            _SPIinit
 ---------------------------------------------------------------------------------
 (2) _SPIinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _SPIinit
   _run
     _processSPIByte

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      2       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       3       6        3.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0       F      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Jan 31 18:35:02 2018

            __CFG_CP$OFF 0000                       l97 00B6              __CFG_LVP$ON 0000  
                    l740 0082                      l732 0074                      l744 0089  
                    l736 007B                      l728 006D                      l754 0097  
                    l770 00F5                      l748 0090                      l756 00AC  
           __CFG_CPD$OFF 0000                      _ISR 0004                      _run 00EA  
           __CFG_BORV$LO 0000             __CFG_IESO$ON 0000                     ?_ISR 007A  
                   ?_run 007A             __CFG_WDTE$ON 0000                     i1l64 0051  
                   u5_20 001D                     u6_24 001F                     u7_20 0026  
                   u8_24 0028                     u9_20 002F             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _main 00F2                     _init 00B7  
                   fsr1h 0007                     indf1 0001                     fsr1l 0006  
                   btemp 007E            __CFG_BOREN$ON 0000          __end_of_SPIinit 00EA  
                   start 0056            __CFG_MCLRE$ON 0000                    ??_ISR 007A  
                  ??_run 007C            __CFG_PLLEN$ON 0000                    ?_main 007A  
                  ?_init 007A                    i1l672 004C                    i1l668 0014  
                  u10_24 0031                    u11_20 0038                    u12_24 003A  
                  u13_20 0041                    u14_24 0043                    u15_20 004A  
           _SPIcomm_mode 0073                    status 0003                    wtemp0 007E  
        __initialization 0058             __end_of_main 00F9             __end_of_init 00E1  
                 ??_main 007C                   ??_init 007C                   _J2_Red 0079  
                 _J3_Red 0076                ??_SPIinit 007C         ??_processSPIByte 0020  
         __CFG_PWRTE$OFF 0000           __CFG_STVREN$ON 0000            _byteToProcess 0071  
__end_of__initialization 0063           __pcstackCOMMON 007A           _OPTION_REGbits 0095  
             __pbssBANK0 0022               __pmaintext 00F2               __pintentry 0004  
                _J2_Blue 0077                  _J3_Blue 0074         _currentPWMOffset 0070  
                _SSP1BUF 0211                  _SPIinit 00E1                  __ptext1 00EA  
                __ptext2 0067                  __ptext3 00B7                  __ptext4 00E1  
           __size_of_ISR 0052             __size_of_run 0008     end_of_initialization 0063  
       __CFG_FOSC$INTOSC 0000                _TRISAbits 008C                _TRISBbits 008D  
    start_initialization 0058              __end_of_ISR 0056              __end_of_run 00F2  
__size_of_processSPIByte 0050              __pbssCOMMON 0070                ___latbits 0001  
          __pcstackBANK0 0020                 ?_SPIinit 007A          _processByteFlag 0072  
               _J2_Green 0078                 _J3_Green 0075                 _LATAbits 010C  
               _LATBbits 010D                 _PIE1bits 0091                 _PIR1bits 0011  
        _dataDestination 0022         __size_of_SPIinit 0009           _processSPIByte 0067  
           _SSP1CON1bits 0215            __size_of_main 0007            __size_of_init 002A  
 __end_of_processSPIByte 00B7                 int$flags 007E               _INTCONbits 000B  
  processSPIByte@theByte 0021                 intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
             _OSCCONbits 0099          ?_processSPIByte 007A  
