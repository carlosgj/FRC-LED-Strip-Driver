

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sun Jan 14 15:06:39 2018

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.40
    19                           ; Generated 01/12/2016 GMT
    20                           ; 
    21                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F1827 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  0091                     	;# 
    84  0092                     	;# 
    85  0093                     	;# 
    86  0094                     	;# 
    87  0095                     	;# 
    88  0096                     	;# 
    89  0097                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009B                     	;# 
    94  009B                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  0111                     	;# 
   101  0112                     	;# 
   102  0113                     	;# 
   103  0114                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011A                     	;# 
   110  011B                     	;# 
   111  011D                     	;# 
   112  011E                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0191                     	;# 
   116  0191                     	;# 
   117  0192                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0193                     	;# 
   121  0194                     	;# 
   122  0195                     	;# 
   123  0196                     	;# 
   124  0199                     	;# 
   125  019A                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019C                     	;# 
   131  019C                     	;# 
   132  019D                     	;# 
   133  019E                     	;# 
   134  019F                     	;# 
   135  020C                     	;# 
   136  020D                     	;# 
   137  0211                     	;# 
   138  0211                     	;# 
   139  0212                     	;# 
   140  0212                     	;# 
   141  0213                     	;# 
   142  0213                     	;# 
   143  0214                     	;# 
   144  0214                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0215                     	;# 
   148  0216                     	;# 
   149  0216                     	;# 
   150  0217                     	;# 
   151  0217                     	;# 
   152  0219                     	;# 
   153  021A                     	;# 
   154  021B                     	;# 
   155  021C                     	;# 
   156  021D                     	;# 
   157  021E                     	;# 
   158  021F                     	;# 
   159  0291                     	;# 
   160  0291                     	;# 
   161  0292                     	;# 
   162  0293                     	;# 
   163  0294                     	;# 
   164  0295                     	;# 
   165  0295                     	;# 
   166  0296                     	;# 
   167  0298                     	;# 
   168  0298                     	;# 
   169  0299                     	;# 
   170  029A                     	;# 
   171  029B                     	;# 
   172  029C                     	;# 
   173  029C                     	;# 
   174  029D                     	;# 
   175  029E                     	;# 
   176  029E                     	;# 
   177  0311                     	;# 
   178  0311                     	;# 
   179  0312                     	;# 
   180  0313                     	;# 
   181  0318                     	;# 
   182  0318                     	;# 
   183  0319                     	;# 
   184  031A                     	;# 
   185  0394                     	;# 
   186  0395                     	;# 
   187  0396                     	;# 
   188  039A                     	;# 
   189  039C                     	;# 
   190  039D                     	;# 
   191  039E                     	;# 
   192  039F                     	;# 
   193  0415                     	;# 
   194  0416                     	;# 
   195  0417                     	;# 
   196  041C                     	;# 
   197  041D                     	;# 
   198  041E                     	;# 
   199  0FE4                     	;# 
   200  0FE5                     	;# 
   201  0FE6                     	;# 
   202  0FE7                     	;# 
   203  0FE8                     	;# 
   204  0FE9                     	;# 
   205  0FEA                     	;# 
   206  0FEB                     	;# 
   207  0FED                     	;# 
   208  0FEE                     	;# 
   209  0FEF                     	;# 
   210                           
   211                           	psect	idataBANK1
   212  06D9                     __pidataBANK1:	
   213                           
   214                           ;initializer for TestPattern@F2802
   215  06D9  3400               	retlw	0
   216  06DA  3400               	retlw	0
   217  06DB  3400               	retlw	0
   218  06DC  3400               	retlw	0
   219  06DD  3400               	retlw	0
   220  06DE  34FF               	retlw	255
   221  06DF  3400               	retlw	0
   222  06E0  34FF               	retlw	255
   223  06E1  34FF               	retlw	255
   224  06E2  34FF               	retlw	255
   225  06E3  34FF               	retlw	255
   226  06E4  34FF               	retlw	255
   227  06E5  34FF               	retlw	255
   228  06E6  34FF               	retlw	255
   229  06E7  3400               	retlw	0
   230  06E8  34FF               	retlw	255
   231  06E9  3400               	retlw	0
   232  06EA  3400               	retlw	0
   233                           
   234                           	psect	cinit
   235  07F2                     start_initialization:	
   236                           ; #config settings
   237                           
   238  07F2                     __initialization:	
   239                           
   240                           ; Initialize objects allocated to BANK1
   241  07F2  30D9               	movlw	low __pidataBANK1
   242  07F3  0084               	movwf	4
   243  07F4  3086               	movlw	(high __pidataBANK1)| (0+128)
   244  07F5  0085               	movwf	5
   245  07F6  30A0               	movlw	low __pdataBANK1
   246  07F7  0086               	movwf	6
   247  07F8  3000               	movlw	high __pdataBANK1
   248  07F9  0087               	movwf	7
   249  07FA  3012               	movlw	18
   250  07FB  3186  26C2         	fcall	init_ram
   251  07FD                     end_of_initialization:	
   252                           ;End of C runtime variable initialization code
   253                           
   254  07FD                     __end_of__initialization:	
   255  07FD  0020               	movlb	0
   256  07FE  3186  2EB8         	ljmp	_main	;jump to C main() function
   257                           
   258                           	psect	dataBANK1
   259  00A0                     __pdataBANK1:	
   260  00A0                     TestPattern@F2802:	
   261  00A0                     	ds	18
   262                           
   263                           	psect	inittext
   264  06C2                     init_ram:	
   265  06C2  00FE               	movwf	126
   266  06C3                     initloop:	
   267  06C3  0012               	moviw fsr0++
   268  06C4  001E               	movwi fsr1++
   269  06C5  0BFE               	decfsz	126,f
   270  06C6  2EC3               	goto	initloop
   271  06C7  3400               	retlw	0
   272                           
   273                           	psect	cstackCOMMON
   274  0070                     __pcstackCOMMON:	
   275  0070                     ?_ShortWait:	
   276  0070                     ??_ShortWait:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_sendPixel:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ?_TestPattern:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_main:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?___bmul:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ___bmul@multiplicand:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     sendPixel@ch1:	
   295                           ; 1 bytes @ 0x0
   296                           
   297                           
   298                           ; 4 bytes @ 0x0
   299  0070                     	ds	1
   300  0071                     ??___bmul:	
   301                           
   302                           ; 1 bytes @ 0x1
   303  0071                     	ds	1
   304  0072                     ___bmul@product:	
   305                           
   306                           ; 1 bytes @ 0x2
   307  0072                     	ds	1
   308  0073                     ___bmul@multiplier:	
   309                           
   310                           ; 1 bytes @ 0x3
   311  0073                     	ds	1
   312  0074                     ?_SetSolidColor:	
   313  0074                     SetSolidColor@pixelCount:	
   314                           ; 1 bytes @ 0x4
   315                           
   316  0074                     sendPixel@ch2:	
   317                           ; 1 bytes @ 0x4
   318                           
   319                           
   320                           ; 4 bytes @ 0x4
   321  0074                     	ds	1
   322  0075                     SetSolidColor@red:	
   323                           
   324                           ; 1 bytes @ 0x5
   325  0075                     	ds	1
   326  0076                     SetSolidColor@green:	
   327                           
   328                           ; 1 bytes @ 0x6
   329  0076                     	ds	1
   330  0077                     SetSolidColor@blue:	
   331                           
   332                           ; 1 bytes @ 0x7
   333  0077                     	ds	1
   334  0078                     ??_sendPixel:	
   335  0078                     ??_SetSolidColor:	
   336                           ; 1 bytes @ 0x8
   337                           
   338                           
   339                           ; 1 bytes @ 0x8
   340  0078                     	ds	1
   341  0079                     sendPixel@i:	
   342                           
   343                           ; 1 bytes @ 0x9
   344  0079                     	ds	2
   345  007B                     SetSolidColor@pixelBuffer:	
   346                           
   347                           ; 1 bytes @ 0xB
   348  007B                     	ds	1
   349  007C                     SetSolidColor@i:	
   350                           
   351                           ; 1 bytes @ 0xC
   352  007C                     	ds	1
   353  007D                     ??_main:	
   354                           
   355                           	psect	cstackBANK0
   356  0020                     __pcstackBANK0:	
   357                           ; 1 bytes @ 0xD
   358                           
   359  0020                     ??_TestPattern:	
   360                           
   361                           ; 1 bytes @ 0x0
   362  0020                     	ds	7
   363  0027                     TestPattern@testpattern:	
   364                           
   365                           ; 18 bytes @ 0x7
   366  0027                     	ds	18
   367  0039                     TestPattern@data:	
   368                           
   369                           ; 40 bytes @ 0x19
   370  0039                     	ds	40
   371  0061                     TestPattern@j:	
   372                           
   373                           ; 1 bytes @ 0x41
   374  0061                     	ds	1
   375  0062                     TestPattern@patternIdx:	
   376                           
   377                           ; 1 bytes @ 0x42
   378  0062                     	ds	1
   379                           
   380                           	psect	maintext
   381  06B8                     __pmaintext:	
   382 ;;
   383 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   384 ;;
   385 ;; *************** function _main *****************
   386 ;; Defined at:
   387 ;;		line 81 in file "main.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;		None
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : B1F/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   401 ;;      Params:         0       0       0       0       0       0
   402 ;;      Locals:         0       0       0       0       0       0
   403 ;;      Temps:          0       0       0       0       0       0
   404 ;;      Totals:         0       0       0       0       0       0
   405 ;;Total ram usage:        0 bytes
   406 ;; Hardware stack levels required when called:    3
   407 ;; This function calls:
   408 ;;		_TestPattern
   409 ;; This function is called by:
   410 ;;		Startup code after reset
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           
   415                           ;psect for function _main
   416  06B8                     _main:	
   417                           
   418                           ;main.c: 82: TestPattern();
   419                           
   420                           ;incstack = 0
   421                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   422  06B8  3187  2759         	fcall	_TestPattern
   423  06BA  3180  2802         	ljmp	start
   424  06BC                     __end_of_main:	
   425                           
   426                           	psect	text1
   427  0759                     __ptext1:	
   428 ;; *************** function _TestPattern *****************
   429 ;; Defined at:
   430 ;;		line 60 in file "main.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;  data           40   25[BANK0 ] struct .[10]
   435 ;;  testpattern    18    7[BANK0 ] unsigned char [3][6]
   436 ;;  patternIdx      1   66[BANK0 ] unsigned char 
   437 ;;  j               1   65[BANK0 ] unsigned char 
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   447 ;;      Params:         0       0       0       0       0       0
   448 ;;      Locals:         0      60       0       0       0       0
   449 ;;      Temps:          0       7       0       0       0       0
   450 ;;      Totals:         0      67       0       0       0       0
   451 ;;Total ram usage:       67 bytes
   452 ;; Hardware stack levels used:    1
   453 ;; Hardware stack levels required when called:    2
   454 ;; This function calls:
   455 ;;		_SetSolidColor
   456 ;;		___bmul
   457 ;;		_sendPixel
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           
   464                           ;psect for function _TestPattern
   465  0759                     _TestPattern:	
   466                           
   467                           ;main.c: 61: pixel data[10];
   468                           ;main.c: 62: unsigned char testpattern[6][3] = {
   469                           ;main.c: 63: {0x00, 0x00, 0x00},
   470                           ;main.c: 64: {0x00, 0x00, 0xff},
   471                           ;main.c: 65: {0x00, 0xff, 0xff},
   472                           ;main.c: 66: {0xff, 0xff, 0xff},
   473                           ;main.c: 67: {0xff, 0xff, 0x00},
   474                           ;main.c: 68: {0xff, 0x00, 0x00}
   475                           ;main.c: 69: };
   476                           
   477                           ;incstack = 0
   478                           ; Regs used in _TestPattern: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   479  0759  30A0               	movlw	low TestPattern@F2802
   480  075A  0086               	movwf	6
   481  075B  3000               	movlw	high TestPattern@F2802
   482  075C  0087               	movwf	7
   483  075D  3027               	movlw	low TestPattern@testpattern
   484  075E  0084               	movwf	4
   485  075F  3000               	movlw	high TestPattern@testpattern
   486  0760  0085               	movwf	5
   487  0761  3012               	movlw	18
   488  0762  0020               	movlb	0	; select bank0
   489  0763  00A0               	movwf	??_TestPattern
   490  0764                     u320:	
   491  0764  0016               	moviw fsr1++
   492  0765  001A               	movwi fsr0++
   493  0766  0BA0               	decfsz	??_TestPattern,f
   494  0767  2F64               	goto	u320
   495                           
   496                           ;main.c: 70: unsigned char patternIdx;
   497                           ;main.c: 71: unsigned char j;
   498                           ;main.c: 72: for(patternIdx=0; patternIdx<6; patternIdx++){
   499  0768  01E2               	clrf	TestPattern@patternIdx
   500  0769                     L1:	
   501  0769  3006               	movlw	6
   502  076A  0262               	subwf	TestPattern@patternIdx,w
   503  076B  1803               	btfsc	3,0
   504  076C  0008               	return
   505                           
   506                           ;main.c: 73: SetSolidColor(data, 10, testpattern[patternIdx][0], testpattern[patternIdx]
      +                          [1], testpattern[patternIdx][2]);
   507  076D  300A               	movlw	10
   508  076E  00A0               	movwf	??_TestPattern
   509  076F  0820               	movf	??_TestPattern,w
   510  0770  00F4               	movwf	SetSolidColor@pixelCount
   511  0771  3003               	movlw	3
   512  0772  00A1               	movwf	??_TestPattern+1
   513  0773  0821               	movf	??_TestPattern+1,w
   514  0774  00F0               	movwf	___bmul@multiplicand
   515  0775  0862               	movf	TestPattern@patternIdx,w
   516  0776  3186  26C8  3187   	fcall	___bmul
   517  0779  3E27               	addlw	(low (TestPattern@testpattern| 0))& (0+255)
   518  077A  0086               	movwf	6
   519  077B  0187               	clrf	7
   520  077C  0801               	movf	1,w
   521  077D  0020               	movlb	0	; select bank0
   522  077E  00A2               	movwf	??_TestPattern+2
   523  077F  0822               	movf	??_TestPattern+2,w
   524  0780  00F5               	movwf	SetSolidColor@red
   525  0781  3003               	movlw	3
   526  0782  00A3               	movwf	??_TestPattern+3
   527  0783  0823               	movf	??_TestPattern+3,w
   528  0784  00F0               	movwf	___bmul@multiplicand
   529  0785  0862               	movf	TestPattern@patternIdx,w
   530  0786  3186  26C8  3187   	fcall	___bmul
   531  0789  3E01               	addlw	1
   532  078A  3E27               	addlw	(low (TestPattern@testpattern| 0))& (0+255)
   533  078B  0086               	movwf	6
   534  078C  0187               	clrf	7
   535  078D  0801               	movf	1,w
   536  078E  0020               	movlb	0	; select bank0
   537  078F  00A4               	movwf	??_TestPattern+4
   538  0790  0824               	movf	??_TestPattern+4,w
   539  0791  00F6               	movwf	SetSolidColor@green
   540  0792  3003               	movlw	3
   541  0793  00A5               	movwf	??_TestPattern+5
   542  0794  0825               	movf	??_TestPattern+5,w
   543  0795  00F0               	movwf	___bmul@multiplicand
   544  0796  0862               	movf	TestPattern@patternIdx,w
   545  0797  3186  26C8  3187   	fcall	___bmul
   546  079A  3E02               	addlw	2
   547  079B  3E27               	addlw	(low (TestPattern@testpattern| 0))& (0+255)
   548  079C  0086               	movwf	6
   549  079D  0187               	clrf	7
   550  079E  0801               	movf	1,w
   551  079F  0020               	movlb	0	; select bank0
   552  07A0  00A6               	movwf	??_TestPattern+6
   553  07A1  0826               	movf	??_TestPattern+6,w
   554  07A2  00F7               	movwf	SetSolidColor@blue
   555  07A3  3039               	movlw	(low (TestPattern@data| 0))& (0+255)
   556  07A4  3187  271A  3187   	fcall	_SetSolidColor
   557                           
   558                           ;main.c: 74: for(j=0; j<10; j++){
   559  07A7  0020               	movlb	0	; select bank0
   560  07A8  01E1               	clrf	TestPattern@j
   561  07A9  300A               	movlw	10
   562  07AA  0261               	subwf	TestPattern@j,w
   563  07AB  1803               	btfsc	3,0
   564  07AC  2FDF               	goto	l645
   565  07AD                     l639:	
   566                           
   567                           ;main.c: 75: sendPixel(data[j].all, data[j].all);
   568  07AD  0861               	movf	TestPattern@j,w
   569  07AE  00A0               	movwf	??_TestPattern
   570  07AF  3001               	movlw	1
   571  07B0                     u355:	
   572  07B0  35A0               	lslf	??_TestPattern,f
   573  07B1  3EFF               	addlw	-1
   574  07B2  1D03               	skipz
   575  07B3  2FB0               	goto	u355
   576  07B4  3520               	lslf	??_TestPattern,w
   577  07B5  3E39               	addlw	(low (TestPattern@data| 0))& (0+255)
   578  07B6  0086               	movwf	6
   579  07B7  0187               	clrf	7
   580  07B8  3F40               	moviw [0]fsr1
   581  07B9  00F0               	movwf	sendPixel@ch1
   582  07BA  3F41               	moviw [1]fsr1
   583  07BB  00F1               	movwf	sendPixel@ch1+1
   584  07BC  3F42               	moviw [2]fsr1
   585  07BD  00F2               	movwf	sendPixel@ch1+2
   586  07BE  3F43               	moviw [3]fsr1
   587  07BF  00F3               	movwf	sendPixel@ch1+3
   588  07C0  0861               	movf	TestPattern@j,w
   589  07C1  00A1               	movwf	??_TestPattern+1
   590  07C2  3001               	movlw	1
   591  07C3                     u365:	
   592  07C3  35A1               	lslf	??_TestPattern+1,f
   593  07C4  3EFF               	addlw	-1
   594  07C5  1D03               	skipz
   595  07C6  2FC3               	goto	u365
   596  07C7  3521               	lslf	??_TestPattern+1,w
   597  07C8  3E39               	addlw	(low (TestPattern@data| 0))& (0+255)
   598  07C9  0086               	movwf	6
   599  07CA  0187               	clrf	7
   600  07CB  3F40               	moviw [0]fsr1
   601  07CC  00F4               	movwf	sendPixel@ch2
   602  07CD  3F41               	moviw [1]fsr1
   603  07CE  00F5               	movwf	sendPixel@ch2+1
   604  07CF  3F42               	moviw [2]fsr1
   605  07D0  00F6               	movwf	sendPixel@ch2+2
   606  07D1  3F43               	moviw [3]fsr1
   607  07D2  00F7               	movwf	sendPixel@ch2+3
   608  07D3  3186  26EB  3187   	fcall	_sendPixel
   609  07D6  3001               	movlw	1
   610  07D7  0020               	movlb	0	; select bank0
   611  07D8  00A0               	movwf	??_TestPattern
   612  07D9  0820               	movf	??_TestPattern,w
   613  07DA  07E1               	addwf	TestPattern@j,f
   614  07DB  300A               	movlw	10
   615  07DC  0261               	subwf	TestPattern@j,w
   616  07DD  1C03               	skipc
   617  07DE  2FAD               	goto	l639
   618  07DF                     l645:	
   619                           
   620                           ;main.c: 76: }
   621                           ;main.c: 77: _delay((unsigned long)((500)*(32000000/4000.0)));
   622  07DF  3015               	movlw	21
   623  07E0  0020               	movlb	0	; select bank0
   624  07E1  00A1               	movwf	??_TestPattern+1
   625  07E2  304B               	movlw	75
   626  07E3  00A0               	movwf	??_TestPattern
   627  07E4  30BE               	movlw	190
   628  07E5                     u397:	
   629  07E5  0B89               	decfsz	9,f
   630  07E6  2FE5               	goto	u397
   631  07E7  0BA0               	decfsz	??_TestPattern,f
   632  07E8  2FE5               	goto	u397
   633  07E9  0BA1               	decfsz	??_TestPattern+1,f
   634  07EA  2FE5               	goto	u397
   635  07EB  0000               	nop
   636  07EC  3001               	movlw	1
   637  07ED  0020               	movlb	0	; select bank0
   638  07EE  00A0               	movwf	??_TestPattern
   639  07EF  0820               	movf	??_TestPattern,w
   640  07F0  07E2               	addwf	TestPattern@patternIdx,f
   641  07F1  2F69               	goto	L1
   642  07F2                     __end_of_TestPattern:	
   643                           
   644                           	psect	text2
   645  06EB                     __ptext2:	
   646 ;; *************** function _sendPixel *****************
   647 ;; Defined at:
   648 ;;		line 18 in file "main.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  ch1             4    0[COMMON] unsigned long 
   651 ;;  ch2             4    4[COMMON] unsigned long 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  i               1    9[COMMON] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0, pclath, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   663 ;;      Params:         8       0       0       0       0       0
   664 ;;      Locals:         1       0       0       0       0       0
   665 ;;      Temps:          1       0       0       0       0       0
   666 ;;      Totals:        10       0       0       0       0       0
   667 ;;Total ram usage:       10 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; Hardware stack levels required when called:    1
   670 ;; This function calls:
   671 ;;		_ShortWait
   672 ;; This function is called by:
   673 ;;		_TestPattern
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           
   678                           ;psect for function _sendPixel
   679  06EB                     _sendPixel:	
   680                           
   681                           ;main.c: 19: unsigned char i;
   682                           ;main.c: 20: for(i=0;i<24;i++){
   683                           
   684                           ;incstack = 0
   685                           ; Regs used in _sendPixel: [wreg+status,2+status,0+pclath+cstack]
   686  06EB  01F9               	clrf	sendPixel@i
   687  06EC                     L2:	
   688  06EC  3018               	movlw	24
   689  06ED  0279               	subwf	sendPixel@i,w
   690  06EE  1803               	btfsc	3,0
   691  06EF  0008               	return
   692  06F0  150C               	bsf	268,2	;# 
   693  06F1  158C               	bsf	268,3	;# 
   694                           
   695                           ;main.c: 24: ShortWait();
   696  06F2  3186  26BC  3186   	fcall	_ShortWait
   697                           
   698                           ;main.c: 25: if(ch1 & 1){
   699  06F5  1C70               	btfss	sendPixel@ch1,0
   700  06F6  2EF9               	goto	l13
   701  06F7  0000               	nop	;# 
   702                           
   703                           ;main.c: 28: }
   704  06F8  2EFA               	goto	l14
   705  06F9                     l13:	
   706  06F9  110C               	bcf	268,2	;# 
   707  06FA                     l14:	
   708                           
   709                           ;main.c: 32: }
   710                           ;main.c: 33: if(ch2 & 1){
   711  06FA  1C74               	btfss	sendPixel@ch2,0
   712  06FB  2EFE               	goto	l15
   713  06FC  0000               	nop	;# 
   714                           
   715                           ;main.c: 36: }
   716  06FD  2EFF               	goto	l591
   717  06FE                     l15:	
   718  06FE  118C               	bcf	268,3	;# 
   719  06FF                     l591:	
   720                           
   721                           ;main.c: 40: }
   722                           ;main.c: 41: ShortWait();
   723  06FF  3186  26BC  3186   	fcall	_ShortWait
   724  0702  110C               	bcf	268,2	;# 
   725  0703  118C               	bcf	268,3	;# 
   726                           
   727                           ;main.c: 44: ShortWait();
   728  0704  3186  26BC  3186   	fcall	_ShortWait
   729                           
   730                           ;main.c: 46: ch1 >>= 1;
   731  0707  3001               	movlw	1
   732  0708                     u235:	
   733  0708  36F3               	lsrf	sendPixel@ch1+3,f
   734  0709  0CF2               	rrf	sendPixel@ch1+2,f
   735  070A  0CF1               	rrf	sendPixel@ch1+1,f
   736  070B  0CF0               	rrf	sendPixel@ch1,f
   737  070C  0B89               	decfsz	9,f
   738  070D  2F08               	goto	u235
   739                           
   740                           ;main.c: 47: ch2 >>= 1;
   741  070E  3001               	movlw	1
   742  070F                     u245:	
   743  070F  36F7               	lsrf	sendPixel@ch2+3,f
   744  0710  0CF6               	rrf	sendPixel@ch2+2,f
   745  0711  0CF5               	rrf	sendPixel@ch2+1,f
   746  0712  0CF4               	rrf	sendPixel@ch2,f
   747  0713  0B89               	decfsz	9,f
   748  0714  2F0F               	goto	u245
   749  0715  3001               	movlw	1
   750  0716  00F8               	movwf	??_sendPixel
   751  0717  0878               	movf	??_sendPixel,w
   752  0718  07F9               	addwf	sendPixel@i,f
   753  0719  2EEC               	goto	L2
   754  071A                     __end_of_sendPixel:	
   755                           
   756                           	psect	text3
   757  06BC                     __ptext3:	
   758 ;; *************** function _ShortWait *****************
   759 ;; Defined at:
   760 ;;		line 13 in file "main.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;		None
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		None
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   774 ;;      Params:         0       0       0       0       0       0
   775 ;;      Locals:         0       0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0       0
   777 ;;      Totals:         0       0       0       0       0       0
   778 ;;Total ram usage:        0 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; This function calls:
   781 ;;		Nothing
   782 ;; This function is called by:
   783 ;;		_sendPixel
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           
   788                           ;psect for function _ShortWait
   789  06BC                     _ShortWait:	
   790                           
   791                           ;incstack = 0
   792                           ; Regs used in _ShortWait: []
   793  06BC  0000               	nop	;# 
   794  06BD  0000               	nop	;# 
   795  06BE  0000               	nop	;# 
   796  06BF  0000               	nop	;# 
   797  06C0  0000               	nop	;# 
   798  06C1  0008               	return
   799  06C2                     __end_of_ShortWait:	
   800                           
   801                           	psect	text4
   802  06C8                     __ptext4:	
   803 ;; *************** function ___bmul *****************
   804 ;; Defined at:
   805 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul8.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  multiplier      1    wreg     unsigned char 
   808 ;;  multiplicand    1    0[COMMON] unsigned char 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  multiplier      1    3[COMMON] unsigned char 
   811 ;;  product         1    2[COMMON] unsigned char 
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      unsigned char 
   814 ;; Registers used:
   815 ;;		wreg, status,2, status,0
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   821 ;;      Params:         1       0       0       0       0       0
   822 ;;      Locals:         2       0       0       0       0       0
   823 ;;      Temps:          1       0       0       0       0       0
   824 ;;      Totals:         4       0       0       0       0       0
   825 ;;Total ram usage:        4 bytes
   826 ;; Hardware stack levels used:    1
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		_TestPattern
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           
   835                           ;psect for function ___bmul
   836  06C8                     ___bmul:	
   837                           
   838                           ;incstack = 0
   839                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   840                           ;___bmul@multiplier stored from wreg
   841  06C8  00F3               	movwf	___bmul@multiplier
   842  06C9  01F2               	clrf	___bmul@product
   843  06CA                     l611:	
   844  06CA  1C73               	btfss	___bmul@multiplier,0
   845  06CB  2ED0               	goto	l615
   846  06CC  0870               	movf	___bmul@multiplicand,w
   847  06CD  00F1               	movwf	??___bmul
   848  06CE  0871               	movf	??___bmul,w
   849  06CF  07F2               	addwf	___bmul@product,f
   850  06D0                     l615:	
   851  06D0  1003               	clrc
   852  06D1  0DF0               	rlf	___bmul@multiplicand,f
   853  06D2  1003               	clrc
   854  06D3  0CF3               	rrf	___bmul@multiplier,f
   855  06D4  0873               	movf	___bmul@multiplier,w
   856  06D5  1D03               	btfss	3,2
   857  06D6  2ECA               	goto	l611
   858  06D7  0872               	movf	___bmul@product,w
   859  06D8  0008               	return
   860  06D9                     __end_of___bmul:	
   861                           
   862                           	psect	text5
   863  071A                     __ptext5:	
   864 ;; *************** function _SetSolidColor *****************
   865 ;; Defined at:
   866 ;;		line 51 in file "main.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  pixelBuffer     1    wreg     PTR struct .
   869 ;;		 -> TestPattern@data(40), 
   870 ;;  pixelCount      1    4[COMMON] unsigned char 
   871 ;;  red             1    5[COMMON] unsigned char 
   872 ;;  green           1    6[COMMON] unsigned char 
   873 ;;  blue            1    7[COMMON] unsigned char 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  pixelBuffer     1   11[COMMON] PTR struct .
   876 ;;		 -> TestPattern@data(40), 
   877 ;;  i               1   12[COMMON] unsigned char 
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   887 ;;      Params:         4       0       0       0       0       0
   888 ;;      Locals:         2       0       0       0       0       0
   889 ;;      Temps:          3       0       0       0       0       0
   890 ;;      Totals:         9       0       0       0       0       0
   891 ;;Total ram usage:        9 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		_TestPattern
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           
   901                           ;psect for function _SetSolidColor
   902  071A                     _SetSolidColor:	
   903                           
   904                           ;incstack = 0
   905                           ; Regs used in _SetSolidColor: [wreg+fsr1l+fsr1h+status,2+status,0]
   906                           ;SetSolidColor@pixelBuffer stored from wreg
   907  071A  00FB               	movwf	SetSolidColor@pixelBuffer
   908                           
   909                           ;main.c: 52: unsigned char i;
   910                           ;main.c: 53: for(i=0; i<pixelCount; i++){
   911  071B  01FC               	clrf	SetSolidColor@i
   912  071C                     l607:	
   913  071C  0874               	movf	SetSolidColor@pixelCount,w
   914  071D  027C               	subwf	SetSolidColor@i,w
   915  071E  1803               	btfsc	3,0
   916  071F  0008               	return
   917                           
   918                           ;main.c: 54: pixelBuffer[i].red = red;
   919  0720  0875               	movf	SetSolidColor@red,w
   920  0721  00F8               	movwf	??_SetSolidColor
   921  0722  087C               	movf	SetSolidColor@i,w
   922  0723  00F9               	movwf	??_SetSolidColor+1
   923  0724  3001               	movlw	1
   924  0725                     u265:	
   925  0725  35F9               	lslf	??_SetSolidColor+1,f
   926  0726  3EFF               	addlw	-1
   927  0727  1D03               	skipz
   928  0728  2F25               	goto	u265
   929  0729  3579               	lslf	??_SetSolidColor+1,w
   930  072A  077B               	addwf	SetSolidColor@pixelBuffer,w
   931  072B  00FA               	movwf	??_SetSolidColor+2
   932  072C  087A               	movf	??_SetSolidColor+2,w
   933  072D  0086               	movwf	6
   934  072E  0187               	clrf	7
   935  072F  0878               	movf	??_SetSolidColor,w
   936  0730  0081               	movwf	1
   937                           
   938                           ;main.c: 55: pixelBuffer[i].green = green;
   939  0731  0876               	movf	SetSolidColor@green,w
   940  0732  00F8               	movwf	??_SetSolidColor
   941  0733  087C               	movf	SetSolidColor@i,w
   942  0734  00F9               	movwf	??_SetSolidColor+1
   943  0735  3001               	movlw	1
   944  0736                     u275:	
   945  0736  35F9               	lslf	??_SetSolidColor+1,f
   946  0737  3EFF               	addlw	-1
   947  0738  1D03               	skipz
   948  0739  2F36               	goto	u275
   949  073A  3579               	lslf	??_SetSolidColor+1,w
   950  073B  077B               	addwf	SetSolidColor@pixelBuffer,w
   951  073C  00FA               	movwf	??_SetSolidColor+2
   952  073D  0A7A               	incf	??_SetSolidColor+2,w
   953  073E  0086               	movwf	6
   954  073F  0187               	clrf	7
   955  0740  0878               	movf	??_SetSolidColor,w
   956  0741  0081               	movwf	1
   957                           
   958                           ;main.c: 56: pixelBuffer[i].blue = blue;
   959  0742  0877               	movf	SetSolidColor@blue,w
   960  0743  00F8               	movwf	??_SetSolidColor
   961  0744  087C               	movf	SetSolidColor@i,w
   962  0745  00F9               	movwf	??_SetSolidColor+1
   963  0746  3001               	movlw	1
   964  0747                     u285:	
   965  0747  35F9               	lslf	??_SetSolidColor+1,f
   966  0748  3EFF               	addlw	-1
   967  0749  1D03               	skipz
   968  074A  2F47               	goto	u285
   969  074B  3579               	lslf	??_SetSolidColor+1,w
   970  074C  077B               	addwf	SetSolidColor@pixelBuffer,w
   971  074D  00FA               	movwf	??_SetSolidColor+2
   972  074E  087A               	movf	??_SetSolidColor+2,w
   973  074F  3E02               	addlw	2
   974  0750  0086               	movwf	6
   975  0751  0187               	clrf	7
   976  0752  0878               	movf	??_SetSolidColor,w
   977  0753  0081               	movwf	1
   978  0754  3001               	movlw	1
   979  0755  00F8               	movwf	??_SetSolidColor
   980  0756  0878               	movf	??_SetSolidColor,w
   981  0757  07FC               	addwf	SetSolidColor@i,f
   982  0758  2F1C               	goto	l607
   983  0759                     __end_of_SetSolidColor:	
   984  007E                     btemp	set	126	;btemp
   985  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     67      67
    BANK1            80      0      18
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    SetSolidColor@pixelBuffer	PTR struct . size(1) Largest target is 40
		 -> TestPattern@data(BANK0[40]), 


Critical Paths under _main in COMMON

    _TestPattern->_SetSolidColor
    _SetSolidColor->___bmul

Critical Paths under _main in BANK0

    _main->_TestPattern

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1197
                        _TestPattern
 ---------------------------------------------------------------------------------
 (1) _TestPattern                                         67    67      0    1197
                                              0 BANK0     67    67      0
                      _SetSolidColor
                             ___bmul
                          _sendPixel
 ---------------------------------------------------------------------------------
 (2) _sendPixel                                           10     2      8     198
                                              0 COMMON    10     2      8
                          _ShortWait
 ---------------------------------------------------------------------------------
 (3) _ShortWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     170
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _SetSolidColor                                        9     5      4     483
                                              4 COMMON     9     5      4
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TestPattern
     _SetSolidColor
       ___bmul (ARG)
     ___bmul
     _sendPixel
       _ShortWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      62       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     43      43       6       83.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      12       8       22.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      62      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sun Jan 14 15:06:39 2018

   __end_of_SetSolidColor 0759            ___bmul@product 0072                        l13 06F9  
                      l14 06FA                        l15 06FE                       LATA 010C  
                     l611 06CA                       l607 071C                       l615 06D0  
                     l645 07DF                       l591 06FF                       l639 07AD  
                     u320 0764                       u235 0708                       u245 070F  
                     u265 0725                       u275 0736                       u355 07B0  
                     u285 0747                       u365 07C3                       u397 07E5  
                     wreg 0009                      _main 06B8                      fsr0h 0005  
                    fsr1h 0007                      fsr0l 0004                      indf1 0001  
                    fsr1l 0006                      btemp 007E                      start 0002  
        TestPattern@F2802 00A0         ___bmul@multiplier 0073                     ?_main 0070  
                   status 0003                     wtemp0 007E           __initialization 07F2  
            __end_of_main 06BC                    ??_main 007D                    ___bmul 06C8  
           ??_TestPattern 0020        __size_of_ShortWait 0006   __end_of__initialization 07FD  
     ___bmul@multiplicand 0070            __pcstackCOMMON 0070              __pidataBANK1 06D9  
     __end_of_TestPattern 07F2        SetSolidColor@green 0076         __end_of_ShortWait 06C2  
              __pmaintext 06B8                   ?___bmul 0070        __size_of_sendPixel 002F  
  __size_of_SetSolidColor 003F           __size_of___bmul 0011                   __ptext1 0759  
                 __ptext2 06EB                   __ptext3 06BC                   __ptext4 06C8  
                 __ptext5 071A               _TestPattern 0759      end_of_initialization 07FD  
       __end_of_sendPixel 071A                   init_ram 06C2                   initloop 06C3  
          SetSolidColor@i 007C             _SetSolidColor 071A            ?_SetSolidColor 0074  
         TestPattern@data 0039            __end_of___bmul 06D9       start_initialization 07F2  
                ??___bmul 0071                 _ShortWait 06BC               __pdataBANK1 00A0  
               ___latbits 0001             __pcstackBANK0 0020         SetSolidColor@blue 0077  
         ??_SetSolidColor 0078                ?_ShortWait 0070                sendPixel@i 0079  
            ?_TestPattern 0070              sendPixel@ch1 0070              sendPixel@ch2 0074  
               _sendPixel 06EB  SetSolidColor@pixelBuffer 007B                ?_sendPixel 0070  
             ??_ShortWait 0070              TestPattern@j 0061          SetSolidColor@red 0075  
           __size_of_main 0004   SetSolidColor@pixelCount 0074      __size_of_TestPattern 0099  
   TestPattern@patternIdx 0062    TestPattern@testpattern 0027               ??_sendPixel 0078  
