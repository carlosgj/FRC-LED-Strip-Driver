

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Feb 04 23:04:39 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.41
    17                           ; Generated 25/01/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F1827 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  008C                     	;# 
    80  008D                     	;# 
    81  0091                     	;# 
    82  0092                     	;# 
    83  0093                     	;# 
    84  0094                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0097                     	;# 
    88  0098                     	;# 
    89  0099                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  0111                     	;# 
    99  0112                     	;# 
   100  0113                     	;# 
   101  0114                     	;# 
   102  0115                     	;# 
   103  0116                     	;# 
   104  0117                     	;# 
   105  0118                     	;# 
   106  0119                     	;# 
   107  011A                     	;# 
   108  011B                     	;# 
   109  011D                     	;# 
   110  011E                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0199                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019C                     	;# 
   129  019C                     	;# 
   130  019D                     	;# 
   131  019E                     	;# 
   132  019F                     	;# 
   133  020C                     	;# 
   134  020D                     	;# 
   135  0211                     	;# 
   136  0211                     	;# 
   137  0212                     	;# 
   138  0212                     	;# 
   139  0213                     	;# 
   140  0213                     	;# 
   141  0214                     	;# 
   142  0214                     	;# 
   143  0215                     	;# 
   144  0215                     	;# 
   145  0215                     	;# 
   146  0216                     	;# 
   147  0216                     	;# 
   148  0217                     	;# 
   149  0217                     	;# 
   150  0219                     	;# 
   151  021A                     	;# 
   152  021B                     	;# 
   153  021C                     	;# 
   154  021D                     	;# 
   155  021E                     	;# 
   156  021F                     	;# 
   157  0291                     	;# 
   158  0291                     	;# 
   159  0292                     	;# 
   160  0293                     	;# 
   161  0294                     	;# 
   162  0295                     	;# 
   163  0295                     	;# 
   164  0296                     	;# 
   165  0298                     	;# 
   166  0298                     	;# 
   167  0299                     	;# 
   168  029A                     	;# 
   169  029B                     	;# 
   170  029C                     	;# 
   171  029C                     	;# 
   172  029D                     	;# 
   173  029E                     	;# 
   174  029E                     	;# 
   175  0311                     	;# 
   176  0311                     	;# 
   177  0312                     	;# 
   178  0313                     	;# 
   179  0318                     	;# 
   180  0318                     	;# 
   181  0319                     	;# 
   182  031A                     	;# 
   183  0394                     	;# 
   184  0395                     	;# 
   185  0396                     	;# 
   186  039A                     	;# 
   187  039C                     	;# 
   188  039D                     	;# 
   189  039E                     	;# 
   190  039F                     	;# 
   191  0415                     	;# 
   192  0416                     	;# 
   193  0417                     	;# 
   194  041C                     	;# 
   195  041D                     	;# 
   196  041E                     	;# 
   197  0FE4                     	;# 
   198  0FE5                     	;# 
   199  0FE6                     	;# 
   200  0FE7                     	;# 
   201  0FE8                     	;# 
   202  0FE9                     	;# 
   203  0FEA                     	;# 
   204  0FEB                     	;# 
   205  0FED                     	;# 
   206  0FEE                     	;# 
   207  0FEF                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  008C                     	;# 
   238  008D                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0094                     	;# 
   243  0095                     	;# 
   244  0096                     	;# 
   245  0097                     	;# 
   246  0098                     	;# 
   247  0099                     	;# 
   248  009A                     	;# 
   249  009B                     	;# 
   250  009B                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  0111                     	;# 
   257  0112                     	;# 
   258  0113                     	;# 
   259  0114                     	;# 
   260  0115                     	;# 
   261  0116                     	;# 
   262  0117                     	;# 
   263  0118                     	;# 
   264  0119                     	;# 
   265  011A                     	;# 
   266  011B                     	;# 
   267  011D                     	;# 
   268  011E                     	;# 
   269  018C                     	;# 
   270  018D                     	;# 
   271  0191                     	;# 
   272  0191                     	;# 
   273  0192                     	;# 
   274  0193                     	;# 
   275  0193                     	;# 
   276  0193                     	;# 
   277  0194                     	;# 
   278  0195                     	;# 
   279  0196                     	;# 
   280  0199                     	;# 
   281  019A                     	;# 
   282  019B                     	;# 
   283  019B                     	;# 
   284  019B                     	;# 
   285  019B                     	;# 
   286  019C                     	;# 
   287  019C                     	;# 
   288  019D                     	;# 
   289  019E                     	;# 
   290  019F                     	;# 
   291  020C                     	;# 
   292  020D                     	;# 
   293  0211                     	;# 
   294  0211                     	;# 
   295  0212                     	;# 
   296  0212                     	;# 
   297  0213                     	;# 
   298  0213                     	;# 
   299  0214                     	;# 
   300  0214                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0215                     	;# 
   304  0216                     	;# 
   305  0216                     	;# 
   306  0217                     	;# 
   307  0217                     	;# 
   308  0219                     	;# 
   309  021A                     	;# 
   310  021B                     	;# 
   311  021C                     	;# 
   312  021D                     	;# 
   313  021E                     	;# 
   314  021F                     	;# 
   315  0291                     	;# 
   316  0291                     	;# 
   317  0292                     	;# 
   318  0293                     	;# 
   319  0294                     	;# 
   320  0295                     	;# 
   321  0295                     	;# 
   322  0296                     	;# 
   323  0298                     	;# 
   324  0298                     	;# 
   325  0299                     	;# 
   326  029A                     	;# 
   327  029B                     	;# 
   328  029C                     	;# 
   329  029C                     	;# 
   330  029D                     	;# 
   331  029E                     	;# 
   332  029E                     	;# 
   333  0311                     	;# 
   334  0311                     	;# 
   335  0312                     	;# 
   336  0313                     	;# 
   337  0318                     	;# 
   338  0318                     	;# 
   339  0319                     	;# 
   340  031A                     	;# 
   341  0394                     	;# 
   342  0395                     	;# 
   343  0396                     	;# 
   344  039A                     	;# 
   345  039C                     	;# 
   346  039D                     	;# 
   347  039E                     	;# 
   348  039F                     	;# 
   349  0415                     	;# 
   350  0416                     	;# 
   351  0417                     	;# 
   352  041C                     	;# 
   353  041D                     	;# 
   354  041E                     	;# 
   355  0FE4                     	;# 
   356  0FE5                     	;# 
   357  0FE6                     	;# 
   358  0FE7                     	;# 
   359  0FE8                     	;# 
   360  0FE9                     	;# 
   361  0FEA                     	;# 
   362  0FEB                     	;# 
   363  0FED                     	;# 
   364  0FEE                     	;# 
   365  0FEF                     	;# 
   366                           
   367                           	psect	nvCOMMON
   368  007B                     __pnvCOMMON:	
   369  007B                     _J2_Red:	
   370  007B                     	ds	1
   371                           
   372                           	psect	nvBANK0
   373  0022                     __pnvBANK0:	
   374  0022                     _J3_Red:	
   375  0022                     	ds	1
   376  0011                     _PIR1bits	set	17
   377  000B                     _INTCONbits	set	11
   378  0091                     _PIE1bits	set	145
   379  0095                     _OPTION_REGbits	set	149
   380  008D                     _TRISBbits	set	141
   381  008C                     _TRISAbits	set	140
   382  010D                     _LATBbits	set	269
   383  010C                     _LATAbits	set	268
   384  0215                     _SSP1CON1bits	set	533
   385  0211                     _SSP1BUF	set	529
   386                           
   387                           ; #config settings
   388  0000                     
   389                           	psect	cinit
   390  0059                     start_initialization:	
   391  0059                     __initialization:	
   392                           
   393                           ; Clear objects allocated to COMMON
   394  0059  01F0               	clrf	__pbssCOMMON& (0+127)
   395  005A  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   396  005B  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   397  005C  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   398  005D  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   399  005E  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   400  005F  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   401  0060  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   402  0061  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   403  0062                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406  0062                     __end_of__initialization:	
   407  0062  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   408  0063  0020               	movlb	0
   409  0064  3181  290E         	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	bssCOMMON
   412  0070                     __pbssCOMMON:	
   413  0070                     _dataDestination:	
   414  0070                     	ds	1
   415  0071                     _currentPWMOffset:	
   416  0071                     	ds	1
   417  0072                     _byteToProcess:	
   418  0072                     	ds	1
   419  0073                     _processByteFlag:	
   420  0073                     	ds	1
   421  0074                     _SPIcomm_mode:	
   422  0074                     	ds	1
   423  0075                     _J3_Blue:	
   424  0075                     	ds	1
   425  0076                     _J3_Green:	
   426  0076                     	ds	1
   427  0077                     _J2_Blue:	
   428  0077                     	ds	1
   429  0078                     _J2_Green:	
   430  0078                     	ds	1
   431                           
   432                           	psect	cstackCOMMON
   433  0079                     __pcstackCOMMON:	
   434  0079                     ?_init:	
   435  0079                     ?_run:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0079                     ?_main:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0079                     ?_ISR:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0079                     ??_ISR:	
   445                           ; 1 bytes @ 0x0
   446                           
   447                           
   448                           ; 1 bytes @ 0x0
   449  0079                     	ds	2
   450  007B                     ??_init:	
   451  007B                     ??_main:	
   452                           ; 1 bytes @ 0x2
   453                           
   454                           
   455                           	psect	cstackBANK0
   456  0020                     __pcstackBANK0:	
   457                           ; 1 bytes @ 0x2
   458                           
   459  0020                     ??_run:	
   460                           
   461                           ; 1 bytes @ 0x0
   462  0020                     	ds	2
   463                           
   464                           	psect	maintext
   465  010E                     __pmaintext:	
   466 ;;
   467 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   468 ;;
   469 ;; *************** function _main *****************
   470 ;; Defined at:
   471 ;;		line 40 in file "main.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, status,2, status,0, pclath, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : B1F/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   485 ;;      Params:         0       0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0       0
   488 ;;      Totals:         0       0       0       0       0       0
   489 ;;Total ram usage:        0 bytes
   490 ;; Hardware stack levels required when called:    2
   491 ;; This function calls:
   492 ;;		_init
   493 ;;		_run
   494 ;; This function is called by:
   495 ;;		Startup code after reset
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           
   500                           ;psect for function _main
   501  010E                     _main:	
   502                           
   503                           ;main.c: 41: init();
   504                           
   505                           ;incstack = 0
   506                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   507  010E  3180  20EA  3181   	fcall	_init
   508  0111                     l45:	
   509                           ;main.c: 42: while((1)){
   510                           
   511                           
   512                           ;main.c: 43: run();
   513  0111  3180  2066  3181   	fcall	_run
   514  0114  2911               	goto	l45
   515  0115                     __end_of_main:	
   516                           
   517                           	psect	text1
   518  0066                     __ptext1:	
   519 ;; *************** function _run *****************
   520 ;; Defined at:
   521 ;;		line 80 in file "main.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, status,2, status,0
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   535 ;;      Params:         0       0       0       0       0       0
   536 ;;      Locals:         0       0       0       0       0       0
   537 ;;      Temps:          0       2       0       0       0       0
   538 ;;      Totals:         0       2       0       0       0       0
   539 ;;Total ram usage:        2 bytes
   540 ;; Hardware stack levels used:    1
   541 ;; Hardware stack levels required when called:    1
   542 ;; This function calls:
   543 ;;		Nothing
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           
   550                           ;psect for function _run
   551  0066                     _run:	
   552                           
   553                           ;main.c: 81: J2_Red = J3_Red = 255;
   554                           
   555                           ;incstack = 0
   556                           ; Regs used in _run: [wreg+status,2+status,0]
   557  0066  30FF               	movlw	255
   558  0067  0020               	movlb	0	; select bank0
   559  0068  00A2               	movwf	_J3_Red
   560  0069  00A0               	movwf	??_run
   561  006A  0820               	movf	??_run,w
   562  006B  00FB               	movwf	_J2_Red
   563  006C                     l825:	
   564                           ;main.c: 82: while(J2_Green < 255){
   565                           
   566  006C  0A78               	incf	_J2_Green,w
   567  006D  1903               	btfsc	3,2
   568  006E  2892               	goto	l831
   569                           
   570                           ;main.c: 83: J2_Green = ++J3_Green;
   571  006F  3001               	movlw	1
   572  0070  0020               	movlb	0	; select bank0
   573  0071  00A0               	movwf	??_run
   574  0072  0820               	movf	??_run,w
   575  0073  07F6               	addwf	_J3_Green,f
   576  0074  0876               	movf	_J3_Green,w
   577  0075  00A1               	movwf	??_run+1
   578  0076  0821               	movf	??_run+1,w
   579  0077  00F8               	movwf	_J2_Green
   580                           
   581                           ;main.c: 84: _delay((unsigned long)((5)*(32000000/4000.0)));
   582  0078  3034               	movlw	52
   583  0079  0020               	movlb	0	; select bank0
   584  007A  00A0               	movwf	??_run
   585  007B  30F1               	movlw	241
   586  007C                     u527:	
   587  007C  0B89               	decfsz	9,f
   588  007D  287C               	goto	u527
   589  007E  0BA0               	decfsz	??_run,f
   590  007F  287C               	goto	u527
   591  0080  3200               	nop2
   592  0081  286C               	goto	l825
   593  0082                     l827:	
   594                           ;main.c: 85: }
   595                           ;main.c: 86: while(J2_Red > 0){
   596                           
   597                           
   598                           ;main.c: 87: J2_Red = --J3_Red;
   599  0082  3001               	movlw	1
   600  0083  0020               	movlb	0	; select bank0
   601  0084  02A2               	subwf	_J3_Red,f
   602  0085  0822               	movf	_J3_Red,w
   603  0086  00A0               	movwf	??_run
   604  0087  0820               	movf	??_run,w
   605  0088  00FB               	movwf	_J2_Red
   606                           
   607                           ;main.c: 88: _delay((unsigned long)((5)*(32000000/4000.0)));
   608  0089  3034               	movlw	52
   609  008A  0020               	movlb	0	; select bank0
   610  008B  00A0               	movwf	??_run
   611  008C  30F1               	movlw	241
   612  008D                     u537:	
   613  008D  0B89               	decfsz	9,f
   614  008E  288D               	goto	u537
   615  008F  0BA0               	decfsz	??_run,f
   616  0090  288D               	goto	u537
   617  0091  3200               	nop2
   618  0092                     l831:	
   619  0092  087B               	movf	_J2_Red,w
   620  0093  1903               	btfsc	3,2
   621  0094  28A8               	goto	l837
   622  0095  2882               	goto	l827
   623  0096                     l833:	
   624                           ;main.c: 89: }
   625                           ;main.c: 90: while(J2_Blue < 255){
   626                           
   627                           
   628                           ;main.c: 91: J2_Blue = ++J3_Blue;
   629  0096  3001               	movlw	1
   630  0097  0020               	movlb	0	; select bank0
   631  0098  00A0               	movwf	??_run
   632  0099  0820               	movf	??_run,w
   633  009A  07F5               	addwf	_J3_Blue,f
   634  009B  0875               	movf	_J3_Blue,w
   635  009C  00A1               	movwf	??_run+1
   636  009D  0821               	movf	??_run+1,w
   637  009E  00F7               	movwf	_J2_Blue
   638                           
   639                           ;main.c: 92: _delay((unsigned long)((5)*(32000000/4000.0)));
   640  009F  3034               	movlw	52
   641  00A0  0020               	movlb	0	; select bank0
   642  00A1  00A0               	movwf	??_run
   643  00A2  30F1               	movlw	241
   644  00A3                     u547:	
   645  00A3  0B89               	decfsz	9,f
   646  00A4  28A3               	goto	u547
   647  00A5  0BA0               	decfsz	??_run,f
   648  00A6  28A3               	goto	u547
   649  00A7  3200               	nop2
   650  00A8                     l837:	
   651  00A8  0A77               	incf	_J2_Blue,w
   652  00A9  1903               	btfsc	3,2
   653  00AA  28BC               	goto	l843
   654  00AB  2896               	goto	l833
   655  00AC                     l839:	
   656                           ;main.c: 93: }
   657                           ;main.c: 94: while(J2_Green > 0){
   658                           
   659                           
   660                           ;main.c: 95: J2_Green = --J3_Green;
   661  00AC  3001               	movlw	1
   662  00AD  02F6               	subwf	_J3_Green,f
   663  00AE  0876               	movf	_J3_Green,w
   664  00AF  0020               	movlb	0	; select bank0
   665  00B0  00A0               	movwf	??_run
   666  00B1  0820               	movf	??_run,w
   667  00B2  00F8               	movwf	_J2_Green
   668                           
   669                           ;main.c: 96: _delay((unsigned long)((5)*(32000000/4000.0)));
   670  00B3  3034               	movlw	52
   671  00B4  0020               	movlb	0	; select bank0
   672  00B5  00A0               	movwf	??_run
   673  00B6  30F1               	movlw	241
   674  00B7                     u557:	
   675  00B7  0B89               	decfsz	9,f
   676  00B8  28B7               	goto	u557
   677  00B9  0BA0               	decfsz	??_run,f
   678  00BA  28B7               	goto	u557
   679  00BB  3200               	nop2
   680  00BC                     l843:	
   681  00BC  0878               	movf	_J2_Green,w
   682  00BD  1903               	btfsc	3,2
   683  00BE  28D2               	goto	l849
   684  00BF  28AC               	goto	l839
   685  00C0                     l845:	
   686                           ;main.c: 97: }
   687                           ;main.c: 98: while(J2_Red < 255){
   688                           
   689                           
   690                           ;main.c: 99: J2_Red = ++J3_Red;
   691  00C0  3001               	movlw	1
   692  00C1  0020               	movlb	0	; select bank0
   693  00C2  00A0               	movwf	??_run
   694  00C3  0820               	movf	??_run,w
   695  00C4  07A2               	addwf	_J3_Red,f
   696  00C5  0822               	movf	_J3_Red,w
   697  00C6  00A1               	movwf	??_run+1
   698  00C7  0821               	movf	??_run+1,w
   699  00C8  00FB               	movwf	_J2_Red
   700                           
   701                           ;main.c: 100: _delay((unsigned long)((5)*(32000000/4000.0)));
   702  00C9  3034               	movlw	52
   703  00CA  0020               	movlb	0	; select bank0
   704  00CB  00A0               	movwf	??_run
   705  00CC  30F1               	movlw	241
   706  00CD                     u567:	
   707  00CD  0B89               	decfsz	9,f
   708  00CE  28CD               	goto	u567
   709  00CF  0BA0               	decfsz	??_run,f
   710  00D0  28CD               	goto	u567
   711  00D1  3200               	nop2
   712  00D2                     l849:	
   713  00D2  0A7B               	incf	_J2_Red,w
   714  00D3  1903               	btfsc	3,2
   715  00D4  28E6               	goto	l855
   716  00D5  28C0               	goto	l845
   717  00D6                     l851:	
   718                           ;main.c: 101: }
   719                           ;main.c: 102: while(J2_Blue > 0){
   720                           
   721                           
   722                           ;main.c: 103: J2_Blue = --J3_Blue;
   723  00D6  3001               	movlw	1
   724  00D7  02F5               	subwf	_J3_Blue,f
   725  00D8  0875               	movf	_J3_Blue,w
   726  00D9  0020               	movlb	0	; select bank0
   727  00DA  00A0               	movwf	??_run
   728  00DB  0820               	movf	??_run,w
   729  00DC  00F7               	movwf	_J2_Blue
   730                           
   731                           ;main.c: 104: _delay((unsigned long)((5)*(32000000/4000.0)));
   732  00DD  3034               	movlw	52
   733  00DE  0020               	movlb	0	; select bank0
   734  00DF  00A0               	movwf	??_run
   735  00E0  30F1               	movlw	241
   736  00E1                     u577:	
   737  00E1  0B89               	decfsz	9,f
   738  00E2  28E1               	goto	u577
   739  00E3  0BA0               	decfsz	??_run,f
   740  00E4  28E1               	goto	u577
   741  00E5  3200               	nop2
   742  00E6                     l855:	
   743  00E6  0877               	movf	_J2_Blue,w
   744  00E7  1903               	btfsc	3,2
   745  00E8  0008               	return
   746  00E9  28D6               	goto	l851
   747  00EA                     __end_of_run:	
   748                           
   749                           	psect	text2
   750  00EA                     __ptext2:	
   751 ;; *************** function _init *****************
   752 ;; Defined at:
   753 ;;		line 47 in file "main.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   767 ;;      Params:         0       0       0       0       0       0
   768 ;;      Locals:         0       0       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0       0
   770 ;;      Totals:         0       0       0       0       0       0
   771 ;;Total ram usage:        0 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; Hardware stack levels required when called:    1
   774 ;; This function calls:
   775 ;;		Nothing
   776 ;; This function is called by:
   777 ;;		_main
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           
   782                           ;psect for function _init
   783  00EA                     _init:	
   784                           
   785                           ;main.c: 48: INTCONbits.GIE = (0);
   786                           
   787                           ;incstack = 0
   788                           ; Regs used in _init: [wreg+status,2+status,0]
   789  00EA  138B               	bcf	11,7	;volatile
   790                           
   791                           ;main.c: 54: INTCONbits.PEIE = (1);
   792  00EB  170B               	bsf	11,6	;volatile
   793                           
   794                           ;main.c: 56: TRISAbits.TRISA1 = (0);
   795  00EC  0021               	movlb	1	; select bank1
   796  00ED  108C               	bcf	12,1	;volatile
   797                           
   798                           ;main.c: 57: LATAbits.LATA1 = (0);
   799  00EE  0022               	movlb	2	; select bank2
   800  00EF  108C               	bcf	12,1	;volatile
   801                           
   802                           ;main.c: 58: TRISAbits.TRISA0 = (0);
   803  00F0  0021               	movlb	1	; select bank1
   804  00F1  100C               	bcf	12,0	;volatile
   805                           
   806                           ;main.c: 59: LATAbits.LATA0 = (0);
   807  00F2  0022               	movlb	2	; select bank2
   808  00F3  100C               	bcf	12,0	;volatile
   809                           
   810                           ;main.c: 60: TRISAbits.TRISA2 = (0);
   811  00F4  0021               	movlb	1	; select bank1
   812  00F5  110C               	bcf	12,2	;volatile
   813                           
   814                           ;main.c: 61: LATAbits.LATA2 = (0);
   815  00F6  0022               	movlb	2	; select bank2
   816  00F7  110C               	bcf	12,2	;volatile
   817                           
   818                           ;main.c: 63: TRISAbits.TRISA4 = (0);
   819  00F8  0021               	movlb	1	; select bank1
   820  00F9  120C               	bcf	12,4	;volatile
   821                           
   822                           ;main.c: 64: LATAbits.LATA4 = (0);
   823  00FA  0022               	movlb	2	; select bank2
   824  00FB  120C               	bcf	12,4	;volatile
   825                           
   826                           ;main.c: 65: TRISAbits.TRISA3 = (0);
   827  00FC  0021               	movlb	1	; select bank1
   828  00FD  118C               	bcf	12,3	;volatile
   829                           
   830                           ;main.c: 66: LATAbits.LATA3 = (0);
   831  00FE  0022               	movlb	2	; select bank2
   832  00FF  118C               	bcf	12,3	;volatile
   833                           
   834                           ;main.c: 67: TRISBbits.TRISB0 = (0);
   835  0100  0021               	movlb	1	; select bank1
   836  0101  100D               	bcf	13,0	;volatile
   837                           
   838                           ;main.c: 68: LATBbits.LATB0 = (0);
   839  0102  0022               	movlb	2	; select bank2
   840  0103  100D               	bcf	13,0	;volatile
   841                           
   842                           ;main.c: 72: OPTION_REGbits.TMR0CS = 0;
   843  0104  0021               	movlb	1	; select bank1
   844  0105  1295               	bcf	21,5	;volatile
   845                           
   846                           ;main.c: 73: OPTION_REGbits.PSA = 1;
   847  0106  1595               	bsf	21,3	;volatile
   848                           
   849                           ;main.c: 74: OPTION_REGbits.PS = 0b110;
   850  0107  0815               	movf	21,w	;volatile
   851  0108  39F8               	andlw	-8
   852  0109  3806               	iorlw	6
   853  010A  0095               	movwf	21	;volatile
   854                           
   855                           ;main.c: 75: INTCONbits.TMR0IE = (1);
   856  010B  168B               	bsf	11,5	;volatile
   857                           
   858                           ;main.c: 77: INTCONbits.GIE = (1);
   859  010C  178B               	bsf	11,7	;volatile
   860  010D  0008               	return
   861  010E                     __end_of_init:	
   862                           
   863                           	psect	intentry
   864  0004                     __pintentry:	
   865 ;; *************** function _ISR *****************
   866 ;; Defined at:
   867 ;;		line 154 in file "main.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   881 ;;      Params:         0       0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0       0
   883 ;;      Temps:          2       0       0       0       0       0
   884 ;;      Totals:         2       0       0       0       0       0
   885 ;;Total ram usage:        2 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		Interrupt level 1
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894  0004                     _ISR:	
   895                           
   896                           ;incstack = 0
   897  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   898                           
   899                           ; Regs used in _ISR: [wreg+status,2+status,0]
   900  0005  3180               	pagesel	$
   901  0006  0020               	movlb	0	; select bank0
   902  0007  087F               	movf	127,w
   903  0008  00FA               	movwf	??_ISR+1
   904                           
   905                           ;main.c: 155: if(PIR1bits.SSP1IF){
   906  0009  1D91               	btfss	17,3	;volatile
   907  000A  2814               	goto	i1l773
   908                           
   909                           ;main.c: 156: processByteFlag = (1);
   910  000B  01F3               	clrf	_processByteFlag
   911  000C  0AF3               	incf	_processByteFlag,f
   912                           
   913                           ;main.c: 157: byteToProcess = SSP1BUF;
   914  000D  0024               	movlb	4	; select bank4
   915  000E  0811               	movf	17,w	;volatile
   916  000F  00F9               	movwf	??_ISR
   917  0010  0879               	movf	??_ISR,w
   918  0011  00F2               	movwf	_byteToProcess
   919                           
   920                           ;main.c: 158: PIR1bits.SSP1IF = (0);
   921  0012  0020               	movlb	0	; select bank0
   922  0013  1191               	bcf	17,3	;volatile
   923  0014                     i1l773:	
   924                           
   925                           ;main.c: 159: }
   926                           ;main.c: 160: if(INTCONbits.TMR0IF){
   927  0014  1D0B               	btfss	11,2	;volatile
   928  0015  2852               	goto	i1l89
   929                           
   930                           ;main.c: 161: LATAbits.LATA1 = (J2_Red > currentPWMOffset);
   931  0016  087B               	movf	_J2_Red,w
   932  0017  0271               	subwf	_currentPWMOffset,w
   933  0018  1803               	btfsc	3,0
   934  0019  281D               	goto	u33_20
   935  001A  0022               	movlb	2	; select bank2
   936  001B  148C               	bsf	12,1	;volatile
   937  001C  281F               	goto	u34_24
   938  001D                     u33_20:	
   939  001D  0022               	movlb	2	; select bank2
   940  001E  108C               	bcf	12,1	;volatile
   941  001F                     u34_24:	
   942                           
   943                           ;main.c: 162: LATAbits.LATA0 = (J2_Green > currentPWMOffset);
   944  001F  0878               	movf	_J2_Green,w
   945  0020  0271               	subwf	_currentPWMOffset,w
   946  0021  1803               	btfsc	3,0
   947  0022  2826               	goto	u35_20
   948  0023  0022               	movlb	2	; select bank2
   949  0024  140C               	bsf	12,0	;volatile
   950  0025  2828               	goto	u36_24
   951  0026                     u35_20:	
   952  0026  0022               	movlb	2	; select bank2
   953  0027  100C               	bcf	12,0	;volatile
   954  0028                     u36_24:	
   955                           
   956                           ;main.c: 163: LATAbits.LATA2 = (J2_Blue > currentPWMOffset);
   957  0028  0877               	movf	_J2_Blue,w
   958  0029  0271               	subwf	_currentPWMOffset,w
   959  002A  1803               	btfsc	3,0
   960  002B  282F               	goto	u37_20
   961  002C  0022               	movlb	2	; select bank2
   962  002D  150C               	bsf	12,2	;volatile
   963  002E  2831               	goto	u38_24
   964  002F                     u37_20:	
   965  002F  0022               	movlb	2	; select bank2
   966  0030  110C               	bcf	12,2	;volatile
   967  0031                     u38_24:	
   968                           
   969                           ;main.c: 165: LATAbits.LATA4 = (J3_Red > currentPWMOffset);
   970  0031  0020               	movlb	0	; select bank0
   971  0032  0822               	movf	_J3_Red,w
   972  0033  0271               	subwf	_currentPWMOffset,w
   973  0034  1803               	btfsc	3,0
   974  0035  2839               	goto	u39_20
   975  0036  0022               	movlb	2	; select bank2
   976  0037  160C               	bsf	12,4	;volatile
   977  0038  283B               	goto	u40_24
   978  0039                     u39_20:	
   979  0039  0022               	movlb	2	; select bank2
   980  003A  120C               	bcf	12,4	;volatile
   981  003B                     u40_24:	
   982                           
   983                           ;main.c: 166: LATAbits.LATA3 = (J3_Green > currentPWMOffset);
   984  003B  0876               	movf	_J3_Green,w
   985  003C  0271               	subwf	_currentPWMOffset,w
   986  003D  1803               	btfsc	3,0
   987  003E  2842               	goto	u41_20
   988  003F  0022               	movlb	2	; select bank2
   989  0040  158C               	bsf	12,3	;volatile
   990  0041  2844               	goto	u42_24
   991  0042                     u41_20:	
   992  0042  0022               	movlb	2	; select bank2
   993  0043  118C               	bcf	12,3	;volatile
   994  0044                     u42_24:	
   995                           
   996                           ;main.c: 167: LATBbits.LATB0 = (J3_Blue > currentPWMOffset);
   997  0044  0875               	movf	_J3_Blue,w
   998  0045  0271               	subwf	_currentPWMOffset,w
   999  0046  1803               	btfsc	3,0
  1000  0047  284B               	goto	u43_20
  1001  0048  0022               	movlb	2	; select bank2
  1002  0049  140D               	bsf	13,0	;volatile
  1003  004A  284D               	goto	i1l777
  1004  004B                     u43_20:	
  1005  004B  0022               	movlb	2	; select bank2
  1006  004C  100D               	bcf	13,0	;volatile
  1007  004D                     i1l777:	
  1008                           
  1009                           ;main.c: 169: currentPWMOffset++;
  1010  004D  3001               	movlw	1
  1011  004E  00F9               	movwf	??_ISR
  1012  004F  0879               	movf	??_ISR,w
  1013  0050  07F1               	addwf	_currentPWMOffset,f
  1014                           
  1015                           ;main.c: 171: INTCONbits.TMR0IF = (0);
  1016  0051  110B               	bcf	11,2	;volatile
  1017  0052                     i1l89:	
  1018  0052  087A               	movf	??_ISR+1,w
  1019  0053  0020               	movlb	0	; select bank0
  1020  0054  00FF               	movwf	127
  1021  0055  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1022  0056  0009               	retfie
  1023  0057                     __end_of_ISR:	
  1024  007E                     btemp	set	126	;btemp
  1025  007E                     int$flags	set	126
  1026  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      12
    BANK0            80      2       3
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    dataDestination	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), J3_Blue(COMMON[1]), J2_Blue(COMMON[1]), J3_Green(COMMON[1]), 
		 -> J2_Green(COMMON[1]), J3_Red(BANK0[1]), J2_Red(COMMON[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_run

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
                                _run
 ---------------------------------------------------------------------------------
 (1) _run                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _run

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      2       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       3       6        3.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0       F      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Feb 04 23:04:39 2018

            __CFG_CP$OFF 0000                       l45 0111              __CFG_LVP$ON 0000  
                    l831 0092                      l833 0096                      l825 006C  
                    l851 00D6                      l843 00BC                      l827 0082  
                    l845 00C0                      l837 00A8                      l855 00E6  
                    l839 00AC                      l849 00D2             __CFG_CPD$OFF 0000  
                    _ISR 0004                      u527 007C                      u537 008D  
                    u547 00A3                      u557 00B7                      u567 00CD  
                    u577 00E1                      _run 0066             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_IESO$ON 0000             __CFG_FOSC$HS 0000  
                   ?_ISR 0079                     ?_run 0079                     i1l89 0052  
           __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000                     _main 010E  
                   _init 00EA                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0057            __CFG_MCLRE$ON 0000                    ??_ISR 0079  
                  ??_run 0020            __CFG_PLLEN$ON 0000                    ?_main 0079  
                  ?_init 0079            __CFG_WDTE$OFF 0000                    i1l773 0014  
                  i1l777 004D                    u40_24 003B                    u41_20 0042  
                  u33_20 001D                    u42_24 0044                    u34_24 001F  
                  u43_20 004B                    u35_20 0026                    u36_24 0028  
                  u37_20 002F                    u38_24 0031                    u39_20 0039  
           _SPIcomm_mode 0074                    status 0003                    wtemp0 007E  
        __initialization 0059             __end_of_main 0115             __end_of_init 010E  
                 ??_main 007B                   ??_init 007B                   _J2_Red 007B  
                 _J3_Red 0022           __CFG_PWRTE$OFF 0000           __CFG_STVREN$ON 0000  
          _byteToProcess 0072  __end_of__initialization 0062           __pcstackCOMMON 0079  
         _OPTION_REGbits 0095               __pnvCOMMON 007B               __pmaintext 010E  
             __pintentry 0004                  _J2_Blue 0077                  _J3_Blue 0075  
       _currentPWMOffset 0071                  _SSP1BUF 0211                  __ptext1 0066  
                __ptext2 00EA             __size_of_ISR 0053             __size_of_run 0084  
   end_of_initialization 0062                _TRISAbits 008C                _TRISBbits 008D  
    start_initialization 0059              __end_of_ISR 0057              __end_of_run 00EA  
            __pbssCOMMON 0070                ___latbits 0001            __pcstackBANK0 0020  
        _processByteFlag 0073                __pnvBANK0 0022                 _J2_Green 0078  
               _J3_Green 0076                 _LATAbits 010C                 _LATBbits 010D  
               _PIE1bits 0091                 _PIR1bits 0011          _dataDestination 0070  
           _SSP1CON1bits 0215            __size_of_main 0007            __size_of_init 0024  
               int$flags 007E               _INTCONbits 000B                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000  
