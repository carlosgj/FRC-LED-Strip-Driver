

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Feb 04 22:00:06 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.41
    19                           ; Generated 25/01/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F1827 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  0091                     	;# 
    84  0092                     	;# 
    85  0093                     	;# 
    86  0094                     	;# 
    87  0095                     	;# 
    88  0096                     	;# 
    89  0097                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009B                     	;# 
    94  009B                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  0111                     	;# 
   101  0112                     	;# 
   102  0113                     	;# 
   103  0114                     	;# 
   104  0115                     	;# 
   105  0116                     	;# 
   106  0117                     	;# 
   107  0118                     	;# 
   108  0119                     	;# 
   109  011A                     	;# 
   110  011B                     	;# 
   111  011D                     	;# 
   112  011E                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0191                     	;# 
   116  0191                     	;# 
   117  0192                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0193                     	;# 
   121  0194                     	;# 
   122  0195                     	;# 
   123  0196                     	;# 
   124  0199                     	;# 
   125  019A                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019C                     	;# 
   131  019C                     	;# 
   132  019D                     	;# 
   133  019E                     	;# 
   134  019F                     	;# 
   135  020C                     	;# 
   136  020D                     	;# 
   137  0211                     	;# 
   138  0211                     	;# 
   139  0212                     	;# 
   140  0212                     	;# 
   141  0213                     	;# 
   142  0213                     	;# 
   143  0214                     	;# 
   144  0214                     	;# 
   145  0215                     	;# 
   146  0215                     	;# 
   147  0215                     	;# 
   148  0216                     	;# 
   149  0216                     	;# 
   150  0217                     	;# 
   151  0217                     	;# 
   152  0219                     	;# 
   153  021A                     	;# 
   154  021B                     	;# 
   155  021C                     	;# 
   156  021D                     	;# 
   157  021E                     	;# 
   158  021F                     	;# 
   159  0291                     	;# 
   160  0291                     	;# 
   161  0292                     	;# 
   162  0293                     	;# 
   163  0294                     	;# 
   164  0295                     	;# 
   165  0295                     	;# 
   166  0296                     	;# 
   167  0298                     	;# 
   168  0298                     	;# 
   169  0299                     	;# 
   170  029A                     	;# 
   171  029B                     	;# 
   172  029C                     	;# 
   173  029C                     	;# 
   174  029D                     	;# 
   175  029E                     	;# 
   176  029E                     	;# 
   177  0311                     	;# 
   178  0311                     	;# 
   179  0312                     	;# 
   180  0313                     	;# 
   181  0318                     	;# 
   182  0318                     	;# 
   183  0319                     	;# 
   184  031A                     	;# 
   185  0394                     	;# 
   186  0395                     	;# 
   187  0396                     	;# 
   188  039A                     	;# 
   189  039C                     	;# 
   190  039D                     	;# 
   191  039E                     	;# 
   192  039F                     	;# 
   193  0415                     	;# 
   194  0416                     	;# 
   195  0417                     	;# 
   196  041C                     	;# 
   197  041D                     	;# 
   198  041E                     	;# 
   199  0FE4                     	;# 
   200  0FE5                     	;# 
   201  0FE6                     	;# 
   202  0FE7                     	;# 
   203  0FE8                     	;# 
   204  0FE9                     	;# 
   205  0FEA                     	;# 
   206  0FEB                     	;# 
   207  0FED                     	;# 
   208  0FEE                     	;# 
   209  0FEF                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  008C                     	;# 
   240  008D                     	;# 
   241  0091                     	;# 
   242  0092                     	;# 
   243  0093                     	;# 
   244  0094                     	;# 
   245  0095                     	;# 
   246  0096                     	;# 
   247  0097                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009A                     	;# 
   251  009B                     	;# 
   252  009B                     	;# 
   253  009C                     	;# 
   254  009D                     	;# 
   255  009E                     	;# 
   256  010C                     	;# 
   257  010D                     	;# 
   258  0111                     	;# 
   259  0112                     	;# 
   260  0113                     	;# 
   261  0114                     	;# 
   262  0115                     	;# 
   263  0116                     	;# 
   264  0117                     	;# 
   265  0118                     	;# 
   266  0119                     	;# 
   267  011A                     	;# 
   268  011B                     	;# 
   269  011D                     	;# 
   270  011E                     	;# 
   271  018C                     	;# 
   272  018D                     	;# 
   273  0191                     	;# 
   274  0191                     	;# 
   275  0192                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0193                     	;# 
   279  0194                     	;# 
   280  0195                     	;# 
   281  0196                     	;# 
   282  0199                     	;# 
   283  019A                     	;# 
   284  019B                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019C                     	;# 
   289  019C                     	;# 
   290  019D                     	;# 
   291  019E                     	;# 
   292  019F                     	;# 
   293  020C                     	;# 
   294  020D                     	;# 
   295  0211                     	;# 
   296  0211                     	;# 
   297  0212                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0213                     	;# 
   301  0214                     	;# 
   302  0214                     	;# 
   303  0215                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0216                     	;# 
   307  0216                     	;# 
   308  0217                     	;# 
   309  0217                     	;# 
   310  0219                     	;# 
   311  021A                     	;# 
   312  021B                     	;# 
   313  021C                     	;# 
   314  021D                     	;# 
   315  021E                     	;# 
   316  021F                     	;# 
   317  0291                     	;# 
   318  0291                     	;# 
   319  0292                     	;# 
   320  0293                     	;# 
   321  0294                     	;# 
   322  0295                     	;# 
   323  0295                     	;# 
   324  0296                     	;# 
   325  0298                     	;# 
   326  0298                     	;# 
   327  0299                     	;# 
   328  029A                     	;# 
   329  029B                     	;# 
   330  029C                     	;# 
   331  029C                     	;# 
   332  029D                     	;# 
   333  029E                     	;# 
   334  029E                     	;# 
   335  0311                     	;# 
   336  0311                     	;# 
   337  0312                     	;# 
   338  0313                     	;# 
   339  0318                     	;# 
   340  0318                     	;# 
   341  0319                     	;# 
   342  031A                     	;# 
   343  0394                     	;# 
   344  0395                     	;# 
   345  0396                     	;# 
   346  039A                     	;# 
   347  039C                     	;# 
   348  039D                     	;# 
   349  039E                     	;# 
   350  039F                     	;# 
   351  0415                     	;# 
   352  0416                     	;# 
   353  0417                     	;# 
   354  041C                     	;# 
   355  041D                     	;# 
   356  041E                     	;# 
   357  0FE4                     	;# 
   358  0FE5                     	;# 
   359  0FE6                     	;# 
   360  0FE7                     	;# 
   361  0FE8                     	;# 
   362  0FE9                     	;# 
   363  0FEA                     	;# 
   364  0FEB                     	;# 
   365  0FED                     	;# 
   366  0FEE                     	;# 
   367  0FEF                     	;# 
   368                           
   369                           	psect	idataCOMMON
   370  00F6                     __pidataCOMMON:	
   371                           
   372                           ;initializer for _J3_Red
   373  00F6  347F               	retlw	127
   374                           
   375                           ;initializer for _J2_Red
   376  00F7  347F               	retlw	127
   377  0015                     _TMR0	set	21
   378  0011                     _PIR1bits	set	17
   379  000B                     _INTCONbits	set	11
   380  0091                     _PIE1bits	set	145
   381  0095                     _OPTION_REGbits	set	149
   382  008D                     _TRISBbits	set	141
   383  008C                     _TRISAbits	set	140
   384  0099                     _OSCCONbits	set	153
   385  010D                     _LATBbits	set	269
   386  010C                     _LATAbits	set	268
   387  0215                     _SSP1CON1bits	set	533
   388  0211                     _SSP1BUF	set	529
   389                           
   390                           ; #config settings
   391  0000                     
   392                           	psect	cinit
   393  0059                     start_initialization:	
   394  0059                     __initialization:	
   395                           
   396                           ; Initialize objects allocated to COMMON
   397  0059  3180  20F6  3180   	fcall	__pidataCOMMON	;fetch initializer
   398  005C  00F8               	movwf	__pdataCOMMON& (0+127)
   399  005D  3180  20F7         	fcall	__pidataCOMMON+1	;fetch initializer
   400  005F  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   401                           
   402                           ; Clear objects allocated to COMMON
   403  0060  01F0               	clrf	__pbssCOMMON& (0+127)
   404  0061  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   405  0062  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   406  0063  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   407  0064  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   408  0065  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   409  0066  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   410  0067  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   411                           
   412                           ; Clear objects allocated to BANK0
   413  0068  01A2               	clrf	__pbssBANK0& (0+127)
   414  0069                     end_of_initialization:	
   415                           ;End of C runtime variable initialization code
   416                           
   417  0069                     __end_of__initialization:	
   418  0069  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   419  006A  0020               	movlb	0
   420  006B  3180  28EF         	ljmp	_main	;jump to C main() function
   421                           
   422                           	psect	bssCOMMON
   423  0070                     __pbssCOMMON:	
   424  0070                     _currentPWMOffset:	
   425  0070                     	ds	1
   426  0071                     _byteToProcess:	
   427  0071                     	ds	1
   428  0072                     _processByteFlag:	
   429  0072                     	ds	1
   430  0073                     _SPIcomm_mode:	
   431  0073                     	ds	1
   432  0074                     _J3_Blue:	
   433  0074                     	ds	1
   434  0075                     _J3_Green:	
   435  0075                     	ds	1
   436  0076                     _J2_Blue:	
   437  0076                     	ds	1
   438  0077                     _J2_Green:	
   439  0077                     	ds	1
   440                           
   441                           	psect	dataCOMMON
   442  0078                     __pdataCOMMON:	
   443  0078                     _J3_Red:	
   444  0078                     	ds	1
   445  0079                     _J2_Red:	
   446  0079                     	ds	1
   447                           
   448                           	psect	bssBANK0
   449  0022                     __pbssBANK0:	
   450  0022                     _dataDestination:	
   451  0022                     	ds	1
   452                           
   453                           	psect	cstackCOMMON
   454  007A                     __pcstackCOMMON:	
   455  007A                     ?_init:	
   456  007A                     ?_run:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  007A                     ?_processSPIByte:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  007A                     ?_main:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  007A                     ?_ISR:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  007A                     ??_ISR:	
   469                           ; 1 bytes @ 0x0
   470                           
   471                           
   472                           ; 1 bytes @ 0x0
   473  007A                     	ds	2
   474  007C                     ??_init:	
   475  007C                     ??_run:	
   476                           ; 1 bytes @ 0x2
   477                           
   478  007C                     ??_main:	
   479                           ; 1 bytes @ 0x2
   480                           
   481                           
   482                           	psect	cstackBANK0
   483  0020                     __pcstackBANK0:	
   484                           ; 1 bytes @ 0x2
   485                           
   486  0020                     ??_processSPIByte:	
   487                           
   488                           ; 1 bytes @ 0x0
   489  0020                     	ds	1
   490  0021                     processSPIByte@theByte:	
   491                           
   492                           ; 1 bytes @ 0x1
   493  0021                     	ds	1
   494                           
   495                           	psect	maintext
   496  00EF                     __pmaintext:	
   497 ;;
   498 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   499 ;;
   500 ;; *************** function _main *****************
   501 ;; Defined at:
   502 ;;		line 38 in file "main.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;		None
   505 ;; Auto vars:     Size  Location     Type
   506 ;;		None
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   511 ;; Tracked objects:
   512 ;;		On entry : B1F/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   516 ;;      Params:         0       0       0       0       0       0
   517 ;;      Locals:         0       0       0       0       0       0
   518 ;;      Temps:          0       0       0       0       0       0
   519 ;;      Totals:         0       0       0       0       0       0
   520 ;;Total ram usage:        0 bytes
   521 ;; Hardware stack levels required when called:    3
   522 ;; This function calls:
   523 ;;		_init
   524 ;;		_run
   525 ;; This function is called by:
   526 ;;		Startup code after reset
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           
   531                           ;psect for function _main
   532  00EF                     _main:	
   533                           
   534                           ;main.c: 39: init();
   535                           
   536                           ;incstack = 0
   537                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   538  00EF  3180  20BD  3180   	fcall	_init
   539  00F2                     l766:	
   540                           ;main.c: 40: while((1)){
   541                           
   542                           
   543                           ;main.c: 41: run();
   544  00F2  3180  20E7  3180   	fcall	_run
   545  00F5  28F2               	goto	l766
   546  00F6                     __end_of_main:	
   547                           
   548                           	psect	text1
   549  00E7                     __ptext1:	
   550 ;; *************** function _run *****************
   551 ;; Defined at:
   552 ;;		line 78 in file "main.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   566 ;;      Params:         0       0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0
   569 ;;      Totals:         0       0       0       0       0       0
   570 ;;Total ram usage:        0 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; Hardware stack levels required when called:    2
   573 ;; This function calls:
   574 ;;		_processSPIByte
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           
   581                           ;psect for function _run
   582  00E7                     _run:	
   583                           
   584                           ;main.c: 79: if(processByteFlag){
   585                           
   586                           ;incstack = 0
   587                           ; Regs used in _run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   588  00E7  0872               	movf	_processByteFlag,w
   589  00E8  1903               	btfsc	3,2
   590  00E9  0008               	return
   591                           
   592                           ;main.c: 80: processSPIByte(byteToProcess);
   593  00EA  0871               	movf	_byteToProcess,w
   594  00EB  3180  206D         	fcall	_processSPIByte
   595                           
   596                           ;main.c: 81: processByteFlag = (0);
   597  00ED  01F2               	clrf	_processByteFlag
   598  00EE  0008               	return
   599  00EF                     __end_of_run:	
   600                           
   601                           	psect	text2
   602  006D                     __ptext2:	
   603 ;; *************** function _processSPIByte *****************
   604 ;; Defined at:
   605 ;;		line 14 in file "spicomm.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;  theByte         1    wreg     unsigned char 
   608 ;; Auto vars:     Size  Location     Type
   609 ;;  theByte         1    1[BANK0 ] unsigned char 
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   619 ;;      Params:         0       0       0       0       0       0
   620 ;;      Locals:         0       1       0       0       0       0
   621 ;;      Temps:          0       1       0       0       0       0
   622 ;;      Totals:         0       2       0       0       0       0
   623 ;;Total ram usage:        2 bytes
   624 ;; Hardware stack levels used:    1
   625 ;; Hardware stack levels required when called:    1
   626 ;; This function calls:
   627 ;;		Nothing
   628 ;; This function is called by:
   629 ;;		_run
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           
   634                           ;psect for function _processSPIByte
   635  006D                     _processSPIByte:	
   636                           
   637                           ;incstack = 0
   638                           ; Regs used in _processSPIByte: [wreg-fsr1h+status,2+status,0]
   639                           ;processSPIByte@theByte stored from wreg
   640  006D  0020               	movlb	0	; select bank0
   641  006E  00A1               	movwf	processSPIByte@theByte
   642                           
   643                           ;spicomm.c: 15: if(SPIcomm_mode == 0){
   644  006F  0873               	movf	_SPIcomm_mode,w
   645  0070  1903               	btfsc	3,2
   646  0071  289D               	goto	l750
   647  0072  28B2               	goto	l752
   648  0073                     l724:	
   649                           ;spicomm.c: 18: case 'r':
   650                           
   651                           ;spicomm.c: 17: switch(theByte){
   652                           
   653                           
   654                           ;spicomm.c: 19: dataDestination = &J2_Red;
   655  0073  3079               	movlw	(low (_J2_Red| 0))& (0+255)
   656  0074  00A0               	movwf	??_processSPIByte
   657  0075  0820               	movf	??_processSPIByte,w
   658  0076  00A2               	movwf	_dataDestination
   659                           
   660                           ;spicomm.c: 20: SPIcomm_mode = 1;
   661  0077  01F3               	clrf	_SPIcomm_mode
   662  0078  0AF3               	incf	_SPIcomm_mode,f
   663                           
   664                           ;spicomm.c: 21: break;
   665  0079  0008               	return
   666  007A                     l728:	
   667                           ;spicomm.c: 22: case 'g':
   668                           
   669                           
   670                           ;spicomm.c: 23: dataDestination = &J2_Green;
   671  007A  3077               	movlw	(low (_J2_Green| 0))& (0+255)
   672  007B  00A0               	movwf	??_processSPIByte
   673  007C  0820               	movf	??_processSPIByte,w
   674  007D  00A2               	movwf	_dataDestination
   675                           
   676                           ;spicomm.c: 24: SPIcomm_mode = 1;
   677  007E  01F3               	clrf	_SPIcomm_mode
   678  007F  0AF3               	incf	_SPIcomm_mode,f
   679                           
   680                           ;spicomm.c: 25: break;
   681  0080  0008               	return
   682  0081                     l732:	
   683                           ;spicomm.c: 26: case 'b':
   684                           
   685                           
   686                           ;spicomm.c: 27: dataDestination = &J2_Blue;
   687  0081  3076               	movlw	(low (_J2_Blue| 0))& (0+255)
   688  0082  00A0               	movwf	??_processSPIByte
   689  0083  0820               	movf	??_processSPIByte,w
   690  0084  00A2               	movwf	_dataDestination
   691                           
   692                           ;spicomm.c: 28: SPIcomm_mode = 1;
   693  0085  01F3               	clrf	_SPIcomm_mode
   694  0086  0AF3               	incf	_SPIcomm_mode,f
   695                           
   696                           ;spicomm.c: 29: break;
   697  0087  0008               	return
   698  0088                     l736:	
   699                           ;spicomm.c: 30: case 'R':
   700                           
   701                           
   702                           ;spicomm.c: 31: dataDestination = &J3_Red;
   703  0088  3078               	movlw	(low (_J3_Red| 0))& (0+255)
   704  0089  00A0               	movwf	??_processSPIByte
   705  008A  0820               	movf	??_processSPIByte,w
   706  008B  00A2               	movwf	_dataDestination
   707                           
   708                           ;spicomm.c: 32: SPIcomm_mode = 1;
   709  008C  01F3               	clrf	_SPIcomm_mode
   710  008D  0AF3               	incf	_SPIcomm_mode,f
   711                           
   712                           ;spicomm.c: 33: break;
   713  008E  0008               	return
   714  008F                     l740:	
   715                           ;spicomm.c: 34: case 'G':
   716                           
   717                           
   718                           ;spicomm.c: 35: dataDestination = &J3_Green;
   719  008F  3075               	movlw	(low (_J3_Green| 0))& (0+255)
   720  0090  00A0               	movwf	??_processSPIByte
   721  0091  0820               	movf	??_processSPIByte,w
   722  0092  00A2               	movwf	_dataDestination
   723                           
   724                           ;spicomm.c: 36: SPIcomm_mode = 1;
   725  0093  01F3               	clrf	_SPIcomm_mode
   726  0094  0AF3               	incf	_SPIcomm_mode,f
   727                           
   728                           ;spicomm.c: 37: break;
   729  0095  0008               	return
   730  0096                     l744:	
   731                           ;spicomm.c: 38: case 'B':
   732                           
   733                           
   734                           ;spicomm.c: 39: dataDestination = &J3_Blue;
   735  0096  3074               	movlw	(low (_J3_Blue| 0))& (0+255)
   736  0097  00A0               	movwf	??_processSPIByte
   737  0098  0820               	movf	??_processSPIByte,w
   738  0099  00A2               	movwf	_dataDestination
   739                           
   740                           ;spicomm.c: 40: SPIcomm_mode = 1;
   741  009A  01F3               	clrf	_SPIcomm_mode
   742  009B  0AF3               	incf	_SPIcomm_mode,f
   743                           
   744                           ;spicomm.c: 42: }
   745                           
   746                           ;spicomm.c: 41: break;
   747  009C  0008               	return
   748  009D                     l750:	
   749  009D  0821               	movf	processSPIByte@theByte,w
   750                           
   751                           ; Switch size 1, requested type "space"
   752                           ; Number of cases is 6, Range of values is 66 to 114
   753                           ; switch strategies available:
   754                           ; Name         Instructions Cycles
   755                           ; simple_byte           19    10 (average)
   756                           ; direct_byte          107     9 (fixed)
   757                           ; jumptable            263     9 (fixed)
   758                           ;	Chosen strategy is simple_byte
   759  009E  3A42               	xorlw	66	; case 66
   760  009F  1903               	skipnz
   761  00A0  2896               	goto	l744
   762  00A1  3A05               	xorlw	5	; case 71
   763  00A2  1903               	skipnz
   764  00A3  288F               	goto	l740
   765  00A4  3A15               	xorlw	21	; case 82
   766  00A5  1903               	skipnz
   767  00A6  2888               	goto	l736
   768  00A7  3A30               	xorlw	48	; case 98
   769  00A8  1903               	skipnz
   770  00A9  2881               	goto	l732
   771  00AA  3A05               	xorlw	5	; case 103
   772  00AB  1903               	skipnz
   773  00AC  287A               	goto	l728
   774  00AD  3A15               	xorlw	21	; case 114
   775  00AE  1903               	skipnz
   776  00AF  2873               	goto	l724
   777  00B0  28BC               	goto	l97
   778                           
   779                           ;spicomm.c: 43: }
   780  00B1  0008               	return
   781  00B2                     l752:	
   782                           
   783                           ;spicomm.c: 44: else{
   784                           ;spicomm.c: 46: *dataDestination = theByte;
   785  00B2  0821               	movf	processSPIByte@theByte,w
   786  00B3  00A0               	movwf	??_processSPIByte
   787  00B4  0822               	movf	_dataDestination,w
   788  00B5  0086               	movwf	6
   789  00B6  0187               	clrf	7
   790  00B7  0820               	movf	??_processSPIByte,w
   791  00B8  0081               	movwf	1
   792                           
   793                           ;spicomm.c: 47: dataDestination = 0;
   794  00B9  01A2               	clrf	_dataDestination
   795                           
   796                           ;spicomm.c: 48: SPIcomm_mode = 0;
   797  00BA  01F3               	clrf	_SPIcomm_mode
   798  00BB  0008               	return
   799  00BC                     l97:	
   800  00BC  0008               	return
   801  00BD                     __end_of_processSPIByte:	
   802                           
   803                           	psect	text3
   804  00BD                     __ptext3:	
   805 ;; *************** function _init *****************
   806 ;; Defined at:
   807 ;;		line 45 in file "main.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, status,2, status,0
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   821 ;;      Params:         0       0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0       0
   823 ;;      Temps:          0       0       0       0       0       0
   824 ;;      Totals:         0       0       0       0       0       0
   825 ;;Total ram usage:        0 bytes
   826 ;; Hardware stack levels used:    1
   827 ;; Hardware stack levels required when called:    1
   828 ;; This function calls:
   829 ;;		Nothing
   830 ;; This function is called by:
   831 ;;		_main
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           
   836                           ;psect for function _init
   837  00BD                     _init:	
   838                           
   839                           ;main.c: 46: INTCONbits.GIE = (0);
   840                           
   841                           ;incstack = 0
   842                           ; Regs used in _init: [wreg+status,2+status,0]
   843  00BD  138B               	bcf	11,7	;volatile
   844                           
   845                           ;main.c: 48: OSCCONbits.IRCF = 0b1110;
   846  00BE  0021               	movlb	1	; select bank1
   847  00BF  0819               	movf	25,w	;volatile
   848  00C0  3987               	andlw	-121
   849  00C1  3870               	iorlw	112
   850  00C2  0099               	movwf	25	;volatile
   851                           
   852                           ;main.c: 49: OSCCONbits.SCS = 0;
   853  00C3  30FC               	movlw	-4
   854  00C4  0599               	andwf	25,f	;volatile
   855                           
   856                           ;main.c: 52: INTCONbits.PEIE = (1);
   857  00C5  170B               	bsf	11,6	;volatile
   858                           
   859                           ;main.c: 54: TRISAbits.TRISA1 = (0);
   860  00C6  108C               	bcf	12,1	;volatile
   861                           
   862                           ;main.c: 55: LATAbits.LATA1 = (0);
   863  00C7  0022               	movlb	2	; select bank2
   864  00C8  108C               	bcf	12,1	;volatile
   865                           
   866                           ;main.c: 56: TRISAbits.TRISA0 = (0);
   867  00C9  0021               	movlb	1	; select bank1
   868  00CA  100C               	bcf	12,0	;volatile
   869                           
   870                           ;main.c: 57: LATAbits.LATA0 = (0);
   871  00CB  0022               	movlb	2	; select bank2
   872  00CC  100C               	bcf	12,0	;volatile
   873                           
   874                           ;main.c: 58: TRISAbits.TRISA2 = (0);
   875  00CD  0021               	movlb	1	; select bank1
   876  00CE  110C               	bcf	12,2	;volatile
   877                           
   878                           ;main.c: 59: LATAbits.LATA2 = (0);
   879  00CF  0022               	movlb	2	; select bank2
   880  00D0  110C               	bcf	12,2	;volatile
   881                           
   882                           ;main.c: 61: TRISAbits.TRISA4 = (0);
   883  00D1  0021               	movlb	1	; select bank1
   884  00D2  120C               	bcf	12,4	;volatile
   885                           
   886                           ;main.c: 62: LATAbits.LATA4 = (0);
   887  00D3  0022               	movlb	2	; select bank2
   888  00D4  120C               	bcf	12,4	;volatile
   889                           
   890                           ;main.c: 63: TRISAbits.TRISA3 = (0);
   891  00D5  0021               	movlb	1	; select bank1
   892  00D6  118C               	bcf	12,3	;volatile
   893                           
   894                           ;main.c: 64: LATAbits.LATA3 = (0);
   895  00D7  0022               	movlb	2	; select bank2
   896  00D8  118C               	bcf	12,3	;volatile
   897                           
   898                           ;main.c: 65: TRISBbits.TRISB0 = (0);
   899  00D9  0021               	movlb	1	; select bank1
   900  00DA  100D               	bcf	13,0	;volatile
   901                           
   902                           ;main.c: 66: LATBbits.LATB0 = (0);
   903  00DB  0022               	movlb	2	; select bank2
   904  00DC  100D               	bcf	13,0	;volatile
   905                           
   906                           ;main.c: 70: OPTION_REGbits.TMR0CS = 0;
   907  00DD  0021               	movlb	1	; select bank1
   908  00DE  1295               	bcf	21,5	;volatile
   909                           
   910                           ;main.c: 71: OPTION_REGbits.PSA = 1;
   911  00DF  1595               	bsf	21,3	;volatile
   912                           
   913                           ;main.c: 72: OPTION_REGbits.PS = 0b110;
   914  00E0  0815               	movf	21,w	;volatile
   915  00E1  39F8               	andlw	-8
   916  00E2  3806               	iorlw	6
   917  00E3  0095               	movwf	21	;volatile
   918                           
   919                           ;main.c: 73: INTCONbits.TMR0IE = (1);
   920  00E4  168B               	bsf	11,5	;volatile
   921                           
   922                           ;main.c: 75: INTCONbits.GIE = (1);
   923  00E5  178B               	bsf	11,7	;volatile
   924  00E6  0008               	return
   925  00E7                     __end_of_init:	
   926                           
   927                           	psect	intentry
   928  0004                     __pintentry:	
   929 ;; *************** function _ISR *****************
   930 ;; Defined at:
   931 ;;		line 100 in file "main.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, status,2, status,0
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   945 ;;      Params:         0       0       0       0       0       0
   946 ;;      Locals:         0       0       0       0       0       0
   947 ;;      Temps:          2       0       0       0       0       0
   948 ;;      Totals:         2       0       0       0       0       0
   949 ;;Total ram usage:        2 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; This function calls:
   952 ;;		Nothing
   953 ;; This function is called by:
   954 ;;		Interrupt level 1
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958  0004                     _ISR:	
   959                           
   960                           ;incstack = 0
   961  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   962                           
   963                           ; Regs used in _ISR: [wreg+status,2+status,0]
   964  0005  3180               	pagesel	$
   965  0006  0020               	movlb	0	; select bank0
   966  0007  087F               	movf	127,w
   967  0008  00FB               	movwf	??_ISR+1
   968                           
   969                           ;main.c: 101: if(PIR1bits.SSP1IF){
   970  0009  1D91               	btfss	17,3	;volatile
   971  000A  2814               	goto	i1l658
   972                           
   973                           ;main.c: 102: processByteFlag = (1);
   974  000B  01F2               	clrf	_processByteFlag
   975  000C  0AF2               	incf	_processByteFlag,f
   976                           
   977                           ;main.c: 103: byteToProcess = SSP1BUF;
   978  000D  0024               	movlb	4	; select bank4
   979  000E  0811               	movf	17,w	;volatile
   980  000F  00FA               	movwf	??_ISR
   981  0010  087A               	movf	??_ISR,w
   982  0011  00F1               	movwf	_byteToProcess
   983                           
   984                           ;main.c: 104: PIR1bits.SSP1IF = (0);
   985  0012  0020               	movlb	0	; select bank0
   986  0013  1191               	bcf	17,3	;volatile
   987  0014                     i1l658:	
   988                           
   989                           ;main.c: 105: }
   990                           ;main.c: 106: if(INTCONbits.TMR0IF){
   991  0014  1D0B               	btfss	11,2	;volatile
   992  0015  2852               	goto	i1l64
   993                           
   994                           ;main.c: 107: LATAbits.LATA1 = (J2_Red > TMR0);
   995  0016  0879               	movf	_J2_Red,w
   996  0017  0215               	subwf	21,w	;volatile
   997  0018  1803               	btfsc	3,0
   998  0019  281D               	goto	u5_20
   999  001A  0022               	movlb	2	; select bank2
  1000  001B  148C               	bsf	12,1	;volatile
  1001  001C  281F               	goto	u6_24
  1002  001D                     u5_20:	
  1003  001D  0022               	movlb	2	; select bank2
  1004  001E  108C               	bcf	12,1	;volatile
  1005  001F                     u6_24:	
  1006                           
  1007                           ;main.c: 108: LATAbits.LATA0 = (J2_Green > currentPWMOffset);
  1008  001F  0877               	movf	_J2_Green,w
  1009  0020  0270               	subwf	_currentPWMOffset,w
  1010  0021  1803               	btfsc	3,0
  1011  0022  2826               	goto	u7_20
  1012  0023  0022               	movlb	2	; select bank2
  1013  0024  140C               	bsf	12,0	;volatile
  1014  0025  2828               	goto	u8_24
  1015  0026                     u7_20:	
  1016  0026  0022               	movlb	2	; select bank2
  1017  0027  100C               	bcf	12,0	;volatile
  1018  0028                     u8_24:	
  1019                           
  1020                           ;main.c: 109: LATAbits.LATA2 = (J2_Blue > currentPWMOffset);
  1021  0028  0876               	movf	_J2_Blue,w
  1022  0029  0270               	subwf	_currentPWMOffset,w
  1023  002A  1803               	btfsc	3,0
  1024  002B  282F               	goto	u9_20
  1025  002C  0022               	movlb	2	; select bank2
  1026  002D  150C               	bsf	12,2	;volatile
  1027  002E  2831               	goto	u10_24
  1028  002F                     u9_20:	
  1029  002F  0022               	movlb	2	; select bank2
  1030  0030  110C               	bcf	12,2	;volatile
  1031  0031                     u10_24:	
  1032                           
  1033                           ;main.c: 111: LATAbits.LATA4 = (J3_Red > TMR0);
  1034  0031  0878               	movf	_J3_Red,w
  1035  0032  0020               	movlb	0	; select bank0
  1036  0033  0215               	subwf	21,w	;volatile
  1037  0034  1803               	btfsc	3,0
  1038  0035  2839               	goto	u11_20
  1039  0036  0022               	movlb	2	; select bank2
  1040  0037  160C               	bsf	12,4	;volatile
  1041  0038  283B               	goto	u12_24
  1042  0039                     u11_20:	
  1043  0039  0022               	movlb	2	; select bank2
  1044  003A  120C               	bcf	12,4	;volatile
  1045  003B                     u12_24:	
  1046                           
  1047                           ;main.c: 112: LATAbits.LATA3 = (J3_Green > currentPWMOffset);
  1048  003B  0875               	movf	_J3_Green,w
  1049  003C  0270               	subwf	_currentPWMOffset,w
  1050  003D  1803               	btfsc	3,0
  1051  003E  2842               	goto	u13_20
  1052  003F  0022               	movlb	2	; select bank2
  1053  0040  158C               	bsf	12,3	;volatile
  1054  0041  2844               	goto	u14_24
  1055  0042                     u13_20:	
  1056  0042  0022               	movlb	2	; select bank2
  1057  0043  118C               	bcf	12,3	;volatile
  1058  0044                     u14_24:	
  1059                           
  1060                           ;main.c: 113: LATBbits.LATB0 = (J3_Blue > currentPWMOffset);
  1061  0044  0874               	movf	_J3_Blue,w
  1062  0045  0270               	subwf	_currentPWMOffset,w
  1063  0046  1803               	btfsc	3,0
  1064  0047  284B               	goto	u15_20
  1065  0048  0022               	movlb	2	; select bank2
  1066  0049  140D               	bsf	13,0	;volatile
  1067  004A  284D               	goto	i1l662
  1068  004B                     u15_20:	
  1069  004B  0022               	movlb	2	; select bank2
  1070  004C  100D               	bcf	13,0	;volatile
  1071  004D                     i1l662:	
  1072                           
  1073                           ;main.c: 115: currentPWMOffset++;
  1074  004D  3001               	movlw	1
  1075  004E  00FA               	movwf	??_ISR
  1076  004F  087A               	movf	??_ISR,w
  1077  0050  07F0               	addwf	_currentPWMOffset,f
  1078                           
  1079                           ;main.c: 117: INTCONbits.TMR0IF = (0);
  1080  0051  110B               	bcf	11,2	;volatile
  1081  0052                     i1l64:	
  1082  0052  087B               	movf	??_ISR+1,w
  1083  0053  0020               	movlb	0	; select bank0
  1084  0054  00FF               	movwf	127
  1085  0055  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1086  0056  0009               	retfie
  1087  0057                     __end_of_ISR:	
  1088  007E                     btemp	set	126	;btemp
  1089  007E                     int$flags	set	126
  1090  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      12
    BANK0            80      2       3
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            32      0       0

Pointer List with Targets:

    dataDestination	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), J3_Blue(COMMON[1]), J3_Green(COMMON[1]), J3_Red(COMMON[1]), 
		 -> J2_Blue(COMMON[1]), J2_Green(COMMON[1]), J2_Red(COMMON[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _run->_processSPIByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      62
                               _init
                                _run
 ---------------------------------------------------------------------------------
 (1) _run                                                  0     0      0      62
                     _processSPIByte
 ---------------------------------------------------------------------------------
 (2) _processSPIByte                                       2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _run
     _processSPIByte

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             160      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      2       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       3       6        3.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            20      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               20      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0       F      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Feb 04 22:00:06 2018

            __CFG_CP$OFF 0000                       l97 00BC              __CFG_LVP$ON 0000  
                    l740 008F                      l732 0081                      l724 0073  
                    l750 009D                      l744 0096                      l736 0088  
                    l728 007A                      l752 00B2                      l766 00F2  
           __CFG_CPD$OFF 0000                      _ISR 0004                      _run 00E7  
           __CFG_BORV$LO 0000             __CFG_IESO$ON 0000                     ?_ISR 007A  
                   ?_run 007A                     i1l64 0052                     _TMR0 0015  
                   u5_20 001D                     u6_24 001F                     u7_20 0026  
                   u8_24 0028                     u9_20 002F             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _main 00EF                     _init 00BD  
                   fsr1h 0007                     indf1 0001                     fsr1l 0006  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0057  
          __CFG_MCLRE$ON 0000                    ??_ISR 007A                    ??_run 007C  
          __CFG_PLLEN$ON 0000                    ?_main 007A                    ?_init 007A  
          __CFG_WDTE$OFF 0000                    i1l662 004D                    i1l658 0014  
                  u10_24 0031                    u11_20 0039                    u12_24 003B  
                  u13_20 0042                    u14_24 0044                    u15_20 004B  
           _SPIcomm_mode 0073                    status 0003                    wtemp0 007E  
        __initialization 0059             __end_of_main 00F6             __end_of_init 00E7  
                 ??_main 007C                   ??_init 007C                   _J2_Red 0079  
                 _J3_Red 0078         ??_processSPIByte 0020           __CFG_PWRTE$OFF 0000  
         __CFG_STVREN$ON 0000            _byteToProcess 0071             __pdataCOMMON 0078  
__end_of__initialization 0069           __pcstackCOMMON 007A           _OPTION_REGbits 0095  
             __pbssBANK0 0022               __pmaintext 00EF               __pintentry 0004  
                _J2_Blue 0076                  _J3_Blue 0074         _currentPWMOffset 0070  
                _SSP1BUF 0211                  __ptext1 00E7                  __ptext2 006D  
                __ptext3 00BD             __size_of_ISR 0053             __size_of_run 0008  
   end_of_initialization 0069         __CFG_FOSC$INTOSC 0000                _TRISAbits 008C  
              _TRISBbits 008D            __pidataCOMMON 00F6      start_initialization 0059  
            __end_of_ISR 0057              __end_of_run 00EF  __size_of_processSPIByte 0050  
            __pbssCOMMON 0070                ___latbits 0001            __pcstackBANK0 0020  
        _processByteFlag 0072                 _J2_Green 0077                 _J3_Green 0075  
               _LATAbits 010C                 _LATBbits 010D                 _PIE1bits 0091  
               _PIR1bits 0011          _dataDestination 0022           _processSPIByte 006D  
           _SSP1CON1bits 0215            __size_of_main 0007            __size_of_init 002A  
 __end_of_processSPIByte 00BD                 int$flags 007E               _INTCONbits 000B  
  processSPIByte@theByte 0021                 intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
             _OSCCONbits 0099          ?_processSPIByte 007A  
